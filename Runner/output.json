{
  "robot": {
    "@generator": "Robot 6.1.1 (Python 3.12.1 on win32)",
    "@generated": "20240814 11:50:36.635",
    "@rpa": "false",
    "@schemaversion": "4",
    "suite": {
      "@id": "s1",
      "@name": "Zwing-Qa-Automation",
      "@source": "C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation",
      "suite": {
        "@id": "s1-s1",
        "@name": "TestCases",
        "@source": "C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases",
        "suite": {
          "@id": "s1-s1-s1",
          "@name": "Web POS",
          "@source": "C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS",
          "suite": {
            "@id": "s1-s1-s1-s1",
            "@name": "Billing",
            "@source": "C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS\\Billing",
            "suite": {
              "@id": "s1-s1-s1-s1-s1",
              "@name": "Add To Cart Test Cases",
              "@source": "C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS\\Billing\\add_to_cart_test_cases.robot",
              "test": [
                {
                  "@id": "s1-s1-s1-s1-s1-t1",
                  "@name": "Zwing_O_1 Add Normal sku with Fixed UOM to cart",
                  "@line": "22",
                  "kw": [
                    {
                      "@name": "Open Application | POS",
                      "@library": "login_keyword",
                      "@type": "SETUP",
                      "kw": [
                        {
                          "@name": "Open Browser",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${${ENV}_URL}",
                            "${browser}"
                          ],
                          "doc": "Opens a new browser instance to the optional ``url``.",
                          "msg": {
                            "@timestamp": "20240814 11:50:47.042",
                            "@level": "INFO",
                            "#text": "Opening browser 'chrome' to base url ' https://staging.app.gozwing.com/'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:50:47.041",
                            "@endtime": "20240814 11:51:04.888"
                          }
                        },
                        {
                          "@name": "Set Window Size",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${window_width}",
                            "${window_height}"
                          ],
                          "doc": "Sets current windows size to given ``width`` and ``height``.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:04.893",
                            "@endtime": "20240814 11:51:05.412"
                          }
                        }
                      ],
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:50:47.041",
                        "@endtime": "20240814 11:51:05.414"
                      }
                    },
                    {
                      "@name": "Get Test Data File",
                      "@library": "login_keyword",
                      "var": "${POS_TD}",
                      "arg": [
                        "${ENV}",
                        "${STAGING_TD}",
                        "${PROD_TD}"
                      ],
                      "kw": [
                        {
                          "@name": "Run Keyword If",
                          "@library": "BuiltIn",
                          "var": "${test_data_file}",
                          "arg": [
                            "'${env}' == 'PROD'",
                            "Set Variable",
                            "${PROD_TD}",
                            "ELSE",
                            "Set Variable",
                            "${STAGING_TD}"
                          ],
                          "doc": "Runs the given keyword with the given arguments, if ``condition`` is true.",
                          "kw": {
                            "@name": "Set Variable",
                            "@library": "BuiltIn",
                            "arg": "${STAGING_TD}",
                            "doc": "Returns the given values which can then be assigned to a variables.",
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:05.470",
                              "@endtime": "20240814 11:51:05.470"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:05.471",
                            "@level": "INFO",
                            "#text": "${test_data_file} = C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS\\Billing\\..\\..\\..\\TestData\\Staging\\Web_POS\\Billing\\add_to_cart_test_data.xlsx"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:05.451",
                            "@endtime": "20240814 11:51:05.471"
                          }
                        },
                        {
                          "@name": "Log",
                          "@library": "BuiltIn",
                          "arg": "${test_data_file}",
                          "doc": "Logs the given message with the given level.",
                          "msg": {
                            "@timestamp": "20240814 11:51:05.471",
                            "@level": "INFO",
                            "#text": "C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS\\Billing\\..\\..\\..\\TestData\\Staging\\Web_POS\\Billing\\add_to_cart_test_data.xlsx"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:05.471",
                            "@endtime": "20240814 11:51:05.471"
                          }
                        }
                      ],
                      "msg": {
                        "@timestamp": "20240814 11:51:05.471",
                        "@level": "INFO",
                        "#text": "${POS_TD} = C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS\\Billing\\..\\..\\..\\TestData\\Staging\\Web_POS\\Billing\\add_to_cart_test_data.xlsx"
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:05.444",
                        "@endtime": "20240814 11:51:05.472"
                      }
                    },
                    {
                      "@name": "Fetch Testdata By Id",
                      "@library": "utilities",
                      "var": "${pos_data}",
                      "arg": [
                        "${POS_TD}",
                        "TC_01"
                      ],
                      "msg": {
                        "@timestamp": "20240814 11:51:05.718",
                        "@level": "INFO",
                        "#text": "${pos_data} = {'TC_Id': 'TC_01', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:05.485",
                        "@endtime": "20240814 11:51:05.718"
                      }
                    },
                    {
                      "@name": "Login With Valid Username And Password | POS",
                      "@library": "login_keyword",
                      "var": "${response}",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Inject JavaScript For Fetch",
                          "@library": "login_keyword",
                          "kw": {
                            "@name": "Execute Javascript",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "window._originalFetch = window.fetch;",
                              "window.fetch = function() {",
                              "return window._originalFetch.apply(this, arguments).then(function(response) {",
                              "response.clone().json().then(function(data) {",
                              "if (!window.apiLogs) window.apiLogs = [];",
                              "window.apiLogs.push({",
                              "type: 'fetch',",
                              "request: arguments[1],",
                              "response: data",
                              "});",
                              "});",
                              "return response;",
                              "});",
                              "};"
                            ],
                            "doc": "Executes the given JavaScript code with possible arguments.",
                            "msg": {
                              "@timestamp": "20240814 11:51:05.726",
                              "@level": "INFO",
                              "#text": "Executing JavaScript:\nwindow._originalFetch = window.fetch;window.fetch = function() {return window._originalFetch.apply(this, arguments).then(function(response) {response.clone().json().then(function(data) {if (!window.apiLogs) window.apiLogs = [];window.apiLogs.push({type: 'fetch',request: arguments[1],response: data});});return response;});};\nWithout any arguments."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:05.723",
                              "@endtime": "20240814 11:51:05.747"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:05.722",
                            "@endtime": "20240814 11:51:05.747"
                          }
                        },
                        {
                          "@name": "Inject JavaScript For XHR",
                          "@library": "login_keyword",
                          "kw": {
                            "@name": "Execute Javascript",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "(function() {",
                              "var originalXhrOpen = XMLHttpRequest.prototype.open;",
                              "var originalXhrSend = XMLHttpRequest.prototype.send;",
                              "XMLHttpRequest.prototype.open = function() {",
                              "this._url = arguments[1];",
                              "return originalXhrOpen.apply(this, arguments);",
                              "};",
                              "XMLHttpRequest.prototype.send = function() {",
                              "this.addEventListener('load', function() {",
                              "if (!window.apiLogs) window.apiLogs = [];",
                              "window.apiLogs.push({",
                              "type: 'xhr',",
                              "request: this._url,",
                              "response: this.responseText",
                              "});",
                              "});",
                              "return originalXhrSend.apply(this, arguments);",
                              "};",
                              "})();"
                            ],
                            "doc": "Executes the given JavaScript code with possible arguments.",
                            "msg": {
                              "@timestamp": "20240814 11:51:05.747",
                              "@level": "INFO",
                              "#text": "Executing JavaScript:\n(function() {var originalXhrOpen = XMLHttpRequest.prototype.open;var originalXhrSend = XMLHttpRequest.prototype.send;XMLHttpRequest.prototype.open = function() {this._url = arguments[1];return originalXhrOpen.apply(this, arguments);};XMLHttpRequest.prototype.send = function() {this.addEventListener('load', function() {if (!window.apiLogs) window.apiLogs = [];window.apiLogs.push({type: 'xhr',request: this._url,response: this.responseText});});return originalXhrSend.apply(this, arguments);};})();\nWithout any arguments."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:05.747",
                              "@endtime": "20240814 11:51:05.764"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:05.747",
                            "@endtime": "20240814 11:51:05.764"
                          }
                        },
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{search_data}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:05.764",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_01', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:05.764",
                            "@endtime": "20240814 11:51:05.764"
                          }
                        },
                        {
                          "@name": "Input Text",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${serial_key}",
                            "${my_dict.serial_key}"
                          ],
                          "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:05.788",
                            "@level": "INFO",
                            "#text": "Typing text '492260724jMt' into text field '//input[@id=\"license-input\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:05.764",
                            "@endtime": "20240814 11:51:06.057"
                          }
                        },
                        {
                          "@name": "Click Button",
                          "@library": "SeleniumLibrary",
                          "arg": "${register_button}",
                          "doc": "Clicks the button identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:06.057",
                            "@level": "INFO",
                            "#text": "Clicking button '//button[@id=\"register-key\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:06.057",
                            "@endtime": "20240814 11:51:07.710"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${pos_username}",
                            "timeout=5s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:07.711",
                            "@endtime": "20240814 11:51:08.517"
                          }
                        },
                        {
                          "@name": "Input Text",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${pos_username}",
                            "${my_dict.username_pos}"
                          ],
                          "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:08.527",
                            "@level": "INFO",
                            "#text": "Typing text 'B_add_to_cart_user1_p1' into text field '//input[@id=\"login-user\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:08.517",
                            "@endtime": "20240814 11:51:08.965"
                          }
                        },
                        {
                          "@name": "Click Button",
                          "@library": "SeleniumLibrary",
                          "arg": "${pos_continue_button}",
                          "doc": "Clicks the button identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:08.966",
                            "@level": "INFO",
                            "#text": "Clicking button '//button[@id=\"login-button\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:08.966",
                            "@endtime": "20240814 11:51:09.077"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${pos_password}",
                            "timeout=5s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:09.077",
                            "@endtime": "20240814 11:51:09.587"
                          }
                        },
                        {
                          "@name": "Input Text",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${pos_password}",
                            "${my_dict.password_pos}"
                          ],
                          "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:09.597",
                            "@level": "INFO",
                            "#text": "Typing text '123456' into text field '//input[@id=\"login-password\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:09.587",
                            "@endtime": "20240814 11:51:09.761"
                          }
                        },
                        {
                          "@name": "Click Button",
                          "@library": "SeleniumLibrary",
                          "arg": "${pos_continue_button}",
                          "doc": "Clicks the button identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:09.761",
                            "@level": "INFO",
                            "#text": "Clicking button '//button[@id=\"login-button\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:09.761",
                            "@endtime": "20240814 11:51:09.869"
                          }
                        },
                        {
                          "@name": "Wait Until Page Contains Element",
                          "@library": "SeleniumLibrary",
                          "arg": "${in_store}",
                          "doc": "Waits until the element ``locator`` appears on the current page.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:09.869",
                            "@endtime": "20240814 11:51:11.854"
                          }
                        },
                        {
                          "@name": "Execute Javascript",
                          "@library": "SeleniumLibrary",
                          "var": "${logs}",
                          "arg": "return window.apiLogs;",
                          "doc": "Executes the given JavaScript code with possible arguments.",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:11.854",
                              "@level": "INFO",
                              "#text": "Executing JavaScript:\nreturn window.apiLogs;\nWithout any arguments."
                            },
                            {
                              "@timestamp": "20240814 11:51:12.050",
                              "@level": "INFO",
                              "#text": "${logs} = [{'request': 'https://staging.api.gozwing.com/cash-register/tag-licence', 'response': '{\"status\":\"success\",\"message\":\"Tagged successfully to cash-register.\",\"udidtoken\":\"$2y$10$87DFtUIFMvULSCMhrIvWtug..."
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:11.854",
                            "@endtime": "20240814 11:51:12.050"
                          }
                        },
                        {
                          "@name": "Extract Udidtoken",
                          "@library": "utilities",
                          "var": "${udidtoken}",
                          "arg": "${logs}",
                          "msg": {
                            "@timestamp": "20240814 11:51:12.052",
                            "@level": "INFO",
                            "#text": "${udidtoken} = $2y$10$87DFtUIFMvULSCMhrIvWtugS2D65AEaYU3Ro/mWqdymB.UjWEr8De"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.051",
                            "@endtime": "20240814 11:51:12.053"
                          }
                        },
                        {
                          "@name": "Execute Javascript",
                          "@library": "SeleniumLibrary",
                          "var": "${token}",
                          "arg": "return localStorage.getItem('operations');",
                          "doc": "Executes the given JavaScript code with possible arguments.",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:12.054",
                              "@level": "INFO",
                              "#text": "Executing JavaScript:\nreturn localStorage.getItem('operations');\nWithout any arguments."
                            },
                            {
                              "@timestamp": "20240814 11:51:12.087",
                              "@level": "INFO",
                              "#text": "${token} = {\"sessions\":{\"organisation_id\":\"170\",\"user_id\":4883,\"forceLogin\":0,\"loading\":false,\"syncLoading\":true,\"user\":{\"id\":4883,\"v_id\":\"170\",\"employee_code\":\"1\",\"sso_user_id\":null,\"vendor_user_random\":null,\"s..."
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.053",
                            "@endtime": "20240814 11:51:12.087"
                          }
                        },
                        {
                          "@name": "Extract Required Fields",
                          "@library": "utilities",
                          "var": "${extracted_data}",
                          "arg": "${token}",
                          "msg": {
                            "@timestamp": "20240814 11:51:12.088",
                            "@level": "INFO",
                            "#text": "${extracted_data} = {\n    \"api_token\": \"Nk2thCwm7R9w5UuaOdeiDjV39YDAYmIH4ZjwhiDoJ7fWdyheH9\",\n    \"v_id\": \"170\",\n    \"store_id\": 12,\n    \"licence\": null,\n    \"vu_id\": 4883,\n    \"terminal_id\": null,\n    \"url\": \"/revoke-lic..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.087",
                            "@endtime": "20240814 11:51:12.088"
                          }
                        },
                        {
                          "@name": "Merge And Update Data With Json Output",
                          "@library": "utilities",
                          "var": "${updated_data}",
                          "arg": [
                            "${EXTRACTED_DATA}",
                            "${udidtoken}",
                            "${my_dict.serial_key}"
                          ],
                          "msg": {
                            "@timestamp": "20240814 11:51:12.105",
                            "@level": "INFO",
                            "#text": "${updated_data} = {\"api_token\": \"Nk2thCwm7R9w5UuaOdeiDjV39YDAYmIH4ZjwhiDoJ7fWdyheH9\", \"v_id\": \"170\", \"store_id\": 12, \"licence\": \"492260724jMt\", \"vu_id\": 4883, \"terminal_id\": null, \"url\": \"/revoke-licence?\", \"trans_from..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.088",
                            "@endtime": "20240814 11:51:12.105"
                          }
                        },
                        {
                          "@name": "Log",
                          "@library": "BuiltIn",
                          "arg": "${updated_data}",
                          "doc": "Logs the given message with the given level.",
                          "msg": {
                            "@timestamp": "20240814 11:51:12.107",
                            "@level": "INFO",
                            "#text": "{\"api_token\": \"Nk2thCwm7R9w5UuaOdeiDjV39YDAYmIH4ZjwhiDoJ7fWdyheH9\", \"v_id\": \"170\", \"store_id\": 12, \"licence\": \"492260724jMt\", \"vu_id\": 4883, \"terminal_id\": null, \"url\": \"/revoke-licence?\", \"trans_from\": \"CLOUD_TAB_WEB\", \"session_id\": 0, \"udidtoken\": \"$2y$10$87DFtUIFMvULSCMhrIvWtugS2D65AEaYU3Ro/mWqdymB.UjWEr8De\"}"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.106",
                            "@endtime": "20240814 11:51:12.107"
                          }
                        }
                      ],
                      "msg": {
                        "@timestamp": "20240814 11:51:12.107",
                        "@level": "INFO",
                        "#text": "${response} = {\"api_token\": \"Nk2thCwm7R9w5UuaOdeiDjV39YDAYmIH4ZjwhiDoJ7fWdyheH9\", \"v_id\": \"170\", \"store_id\": 12, \"licence\": \"492260724jMt\", \"vu_id\": 4883, \"terminal_id\": null, \"url\": \"/revoke-licence?\", \"trans_from..."
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:05.719",
                        "@endtime": "20240814 11:51:12.107"
                      }
                    },
                    {
                      "@name": "Open The Session",
                      "@library": "promo_keyword",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{search_data}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:12.109",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_01', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.109",
                            "@endtime": "20240814 11:51:12.109"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${catalog_update_failed}",
                          "arg": [
                            "Element Should Be Visible",
                            "${catalog_update_failed_heading}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": "${catalog_update_failed_heading}",
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:12.530",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-1.png\"><img src=\"selenium-screenshot-1.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:12.532",
                                "@level": "FAIL",
                                "#text": "Element with locator '//h5[contains(text(),\"Catalog Update Failed\")]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:12.120",
                              "@endtime": "20240814 11:51:12.584"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:12.585",
                            "@level": "INFO",
                            "#text": "${catalog_update_failed} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.118",
                            "@endtime": "20240814 11:51:12.585"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${catalog_update}",
                          "arg": [
                            "Wait Until Page Contains Element",
                            "${done_progress}",
                            "timeout=10"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Wait Until Page Contains Element",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "${done_progress}",
                              "timeout=10"
                            ],
                            "doc": "Waits until the element ``locator`` appears on the current page.",
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:12.587",
                              "@endtime": "20240814 11:51:12.606"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:12.606",
                            "@level": "INFO",
                            "#text": "${catalog_update} = True"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.587",
                            "@endtime": "20240814 11:51:12.606"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${closing_balance_visible}",
                          "arg": [
                            "Element Should Be Visible",
                            "${closing_balance}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": "${closing_balance}",
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:12.973",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-2.png\"><img src=\"selenium-screenshot-2.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:12.973",
                                "@level": "FAIL",
                                "#text": "Element with locator '//div//header//h5[@class=\"modal-title\"and contains(text(),\"Close Session\")]//following::div[@class=\"col-md-12 col-lg-12\"]//input[@class=\"w-100 form-control form-control-lg\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:12.701",
                              "@endtime": "20240814 11:51:12.974"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:12.974",
                            "@level": "INFO",
                            "#text": "${closing_balance_visible} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.701",
                            "@endtime": "20240814 11:51:12.974"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${closing_balance_specify_denomination_visible}",
                          "arg": [
                            "Element Should Be Visible",
                            "${closing_balance_note_tab}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": "${closing_balance_note_tab}",
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:13.171",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-3.png\"><img src=\"selenium-screenshot-3.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:13.172",
                                "@level": "FAIL",
                                "#text": "Element with locator '//h5[text()=\"Close Session\"]//ancestor::div//a[(contains(text(),\"Notes\")) and @role=\"tab\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:12.980",
                              "@endtime": "20240814 11:51:13.174"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:13.174",
                            "@level": "INFO",
                            "#text": "${closing_balance_specify_denomination_visible} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.980",
                            "@endtime": "20240814 11:51:13.174"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${opening_session_present}",
                          "arg": [
                            "Element Should Be Visible",
                            "${opening_balance}",
                            "timeout=10s"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "${opening_balance}",
                              "timeout=10s"
                            ],
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:13.354",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-4.png\"><img src=\"selenium-screenshot-4.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:13.354",
                                "@level": "FAIL",
                                "#text": "Element with locator '//div//header//h5[@class=\"modal-title\"and contains(text(),\"Open Session\")]//following::div[@class=\"col-md-12 col-lg-12\"]//input[@class=\"w-100 form-control form-control-lg\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:13.177",
                              "@endtime": "20240814 11:51:13.356"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:13.356",
                            "@level": "INFO",
                            "#text": "${opening_session_present} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.177",
                            "@endtime": "20240814 11:51:13.356"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${opening_session_specify_denomination_present}",
                          "arg": [
                            "Element Should Be Visible",
                            "${open_session_notes_tab}",
                            "timeout=10s"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "${open_session_notes_tab}",
                              "timeout=10s"
                            ],
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": {
                              "@timestamp": "20240814 11:51:13.389",
                              "@level": "INFO",
                              "#text": "Element '//h5[text()=\"Open Session\"]//ancestor::div//a[(contains(text(),\"Notes\")) and @role=\"tab\"]' is displayed."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:13.360",
                              "@endtime": "20240814 11:51:13.389"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:13.389",
                            "@level": "INFO",
                            "#text": "${opening_session_specify_denomination_present} = True"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.360",
                            "@endtime": "20240814 11:51:13.389"
                          }
                        }
                      ],
                      "if": [
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${catalog_update_failed}",
                            "kw": {
                              "@name": "Click Button",
                              "@library": "SeleniumLibrary",
                              "arg": "${catalog_close_button}",
                              "doc": "Clicks the button identified by ``locator``.",
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:12.586",
                                "@endtime": "20240814 11:51:12.586"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:12.586",
                              "@endtime": "20240814 11:51:12.587"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.586",
                            "@endtime": "20240814 11:51:12.587"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${catalog_update}",
                            "kw": {
                              "@name": "Click Button",
                              "@library": "SeleniumLibrary",
                              "arg": "${done_progress}",
                              "doc": "Clicks the button identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:12.607",
                                "@level": "INFO",
                                "#text": "Clicking button '//button[@id=\"done-progress\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:12.606",
                                "@endtime": "20240814 11:51:12.700"
                              }
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:12.606",
                              "@endtime": "20240814 11:51:12.700"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.606",
                            "@endtime": "20240814 11:51:12.700"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${closing_balance_visible}",
                            "kw": [
                              {
                                "@name": "Convert Items To List",
                                "@library": "utilities",
                                "var": "${items_list}",
                                "arg": "${my_dict.closing_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:12.974",
                                  "@endtime": "20240814 11:51:12.974"
                                }
                              },
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.closing_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:12.975",
                                  "@endtime": "20240814 11:51:12.975"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${force_close_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:12.978",
                                  "@endtime": "20240814 11:51:12.978"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${force_close_button}",
                                  "timeout=20s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:12.978",
                                  "@endtime": "20240814 11:51:12.980"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${opening_balance}",
                                  "timeout=20s"
                                ],
                                "doc": "Waits until the element ``locator`` is visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:12.980",
                                  "@endtime": "20240814 11:51:12.980"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:12.977",
                                      "@endtime": "20240814 11:51:12.977"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${key}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:12.978",
                                      "@endtime": "20240814 11:51:12.978"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:12.978",
                                      "@endtime": "20240814 11:51:12.978"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${closing_balance}",
                                      "${key}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:12.978",
                                      "@endtime": "20240814 11:51:12.978"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:12.977",
                                  "@endtime": "20240814 11:51:12.978"
                                }
                              },
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:12.976",
                                "@endtime": "20240814 11:51:12.978"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:12.974",
                              "@endtime": "20240814 11:51:12.980"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:12.974",
                            "@endtime": "20240814 11:51:12.980"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${closing_balance_specify_denomination_visible}",
                            "kw": [
                              {
                                "@name": "Convert Items To List",
                                "@library": "utilities",
                                "var": "${items_list}",
                                "arg": "${my_dict.closing_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.174",
                                  "@endtime": "20240814 11:51:13.175"
                                }
                              },
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.closing_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.175",
                                  "@endtime": "20240814 11:51:13.175"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${open_session_submit_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.177",
                                  "@endtime": "20240814 11:51:13.177"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${closing_balance_note_tab}",
                                  "timeout=10s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.177",
                                  "@endtime": "20240814 11:51:13.177"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.175",
                                      "@endtime": "20240814 11:51:13.175"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${key}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.175",
                                      "@endtime": "20240814 11:51:13.175"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.175",
                                      "@endtime": "20240814 11:51:13.175"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${value}",
                                    "arg": "${values}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.175",
                                      "@endtime": "20240814 11:51:13.176"
                                    }
                                  },
                                  {
                                    "@name": "Replace String",
                                    "@library": "String",
                                    "var": "${balance_field}",
                                    "arg": [
                                      "${money_input_field}",
                                      "AMOUNT",
                                      "${key}"
                                    ],
                                    "doc": "Replaces ``search_for`` in the given ``string`` with ``replace_with``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.176",
                                      "@endtime": "20240814 11:51:13.176"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${balance_field}",
                                      "${value}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.176",
                                      "@endtime": "20240814 11:51:13.176"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.175",
                                  "@endtime": "20240814 11:51:13.176"
                                }
                              },
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:13.175",
                                "@endtime": "20240814 11:51:13.176"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:13.174",
                              "@endtime": "20240814 11:51:13.177"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.174",
                            "@endtime": "20240814 11:51:13.177"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${opening_session_present}",
                            "kw": [
                              {
                                "@name": "Clear Element Text",
                                "@library": "SeleniumLibrary",
                                "arg": "${opening_balance}",
                                "doc": "Clears the value of the text-input-element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.357",
                                  "@endtime": "20240814 11:51:13.357"
                                }
                              },
                              {
                                "@name": "Convert Items To List",
                                "@library": "utilities",
                                "var": "${items_list}",
                                "arg": "${my_dict.opening_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.357",
                                  "@endtime": "20240814 11:51:13.358"
                                }
                              },
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.opening_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.358",
                                  "@endtime": "20240814 11:51:13.358"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${open_session_submit_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.358",
                                  "@endtime": "20240814 11:51:13.358"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${opening_balance}",
                                  "timeout=10s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.359",
                                  "@endtime": "20240814 11:51:13.359"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.358",
                                      "@endtime": "20240814 11:51:13.358"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${key}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.358",
                                      "@endtime": "20240814 11:51:13.358"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.358",
                                      "@endtime": "20240814 11:51:13.358"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${opening_balance}",
                                      "${key}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:13.358",
                                      "@endtime": "20240814 11:51:13.358"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:13.358",
                                  "@endtime": "20240814 11:51:13.358"
                                }
                              },
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:13.358",
                                "@endtime": "20240814 11:51:13.358"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:13.356",
                              "@endtime": "20240814 11:51:13.359"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.356",
                            "@endtime": "20240814 11:51:13.359"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${opening_session_specify_denomination_present}",
                            "kw": [
                              {
                                "@name": "Convert Items To List",
                                "@library": "utilities",
                                "var": "${items_list}",
                                "arg": "${my_dict.opening_balance}",
                                "msg": {
                                  "@timestamp": "20240814 11:51:13.401",
                                  "@level": "INFO",
                                  "#text": "${items_list} = ['500 : 1']"
                                },
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:13.391",
                                  "@endtime": "20240814 11:51:13.401"
                                }
                              },
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.opening_balance}",
                                "msg": [
                                  {
                                    "@timestamp": "20240814 11:51:13.411",
                                    "@level": "INFO",
                                    "#text": "Current item: 500 : 1\nSplit result: ['500', '1']"
                                  },
                                  {
                                    "@timestamp": "20240814 11:51:13.411",
                                    "@level": "INFO",
                                    "#text": "${items_dict} = {'500': 1}"
                                  }
                                ],
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:13.401",
                                  "@endtime": "20240814 11:51:13.411"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${open_session_submit_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "msg": {
                                  "@timestamp": "20240814 11:51:13.575",
                                  "@level": "INFO",
                                  "#text": "Clicking element '//button[@id=\"session-cont\"]'."
                                },
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:13.575",
                                  "@endtime": "20240814 11:51:13.772"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${opening_balance}",
                                  "timeout=10s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:13.773",
                                  "@endtime": "20240814 11:51:13.791"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}",
                                  "#text": "('500', 1)"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key_int}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:13.422",
                                      "@level": "INFO",
                                      "#text": "${key_int} = 500"
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:13.422",
                                      "@endtime": "20240814 11:51:13.422"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${key_int}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:13.425",
                                      "@level": "INFO",
                                      "#text": "${key} = 500"
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:13.423",
                                      "@endtime": "20240814 11:51:13.425"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:13.426",
                                      "@level": "INFO",
                                      "#text": "${values} = 1"
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:13.425",
                                      "@endtime": "20240814 11:51:13.426"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${value}",
                                    "arg": "${values}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:13.427",
                                      "@level": "INFO",
                                      "#text": "${value} = 1"
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:13.426",
                                      "@endtime": "20240814 11:51:13.427"
                                    }
                                  },
                                  {
                                    "@name": "Replace String",
                                    "@library": "String",
                                    "var": "${balance_field}",
                                    "arg": [
                                      "${money_input_field}",
                                      "AMOUNT",
                                      "${key}"
                                    ],
                                    "doc": "Replaces ``search_for`` in the given ``string`` with ``replace_with``.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:13.432",
                                      "@level": "INFO",
                                      "#text": "${balance_field} = //p[contains(text(),\"\u00e2\u201a\u00b9 500\")]//ancestor::div[@class=\"col-3\"]//following-sibling::div//input"
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:13.427",
                                      "@endtime": "20240814 11:51:13.434"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${balance_field}",
                                      "${value}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:13.434",
                                      "@level": "INFO",
                                      "#text": "Typing text '1' into text field '//p[contains(text(),\"\u00e2\u201a\u00b9 500\")]//ancestor::div[@class=\"col-3\"]//following-sibling::div//input'."
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:13.434",
                                      "@endtime": "20240814 11:51:13.574"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:13.422",
                                  "@endtime": "20240814 11:51:13.574"
                                }
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:13.412",
                                "@endtime": "20240814 11:51:13.574"
                              }
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:13.389",
                              "@endtime": "20240814 11:51:13.791"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.389",
                            "@endtime": "20240814 11:51:13.791"
                          }
                        }
                      ],
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:12.108",
                        "@endtime": "20240814 11:51:13.791"
                      }
                    },
                    {
                      "@name": "Scan Barcode To Add Item And Quantity To Cart",
                      "@library": "promo_keyword",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{products}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:13.796",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_01', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.795",
                            "@endtime": "20240814 11:51:13.796"
                          }
                        },
                        {
                          "@name": "Log",
                          "@library": "BuiltIn",
                          "arg": "${my_dict.buy_items}",
                          "doc": "Logs the given message with the given level.",
                          "msg": {
                            "@timestamp": "20240814 11:51:13.804",
                            "@level": "INFO",
                            "#text": "8906118410781 : 1"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.796",
                            "@endtime": "20240814 11:51:13.804"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${scan_only}",
                            "timeout=20s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.805",
                            "@endtime": "20240814 11:51:13.851"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${clear_item_enabled}",
                          "arg": [
                            "Element Should Be Enabled",
                            "${clear_all_items}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Enabled",
                            "@library": "SeleniumLibrary",
                            "arg": "${clear_all_items}",
                            "doc": "Verifies that element identified by ``locator`` is enabled.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:14.320",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-5.png\"><img src=\"selenium-screenshot-5.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:14.322",
                                "@level": "FAIL",
                                "#text": "Element with locator '(//button[@class='btn mr-1 btn-danger btn-block'])[2]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:13.852",
                              "@endtime": "20240814 11:51:14.323"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:14.323",
                            "@level": "INFO",
                            "#text": "${clear_item_enabled} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:13.851",
                            "@endtime": "20240814 11:51:14.323"
                          }
                        },
                        {
                          "@name": "Convert Items To List",
                          "@library": "utilities",
                          "var": "${items_list}",
                          "arg": "${my_dict.buy_items}",
                          "msg": {
                            "@timestamp": "20240814 11:51:14.334",
                            "@level": "INFO",
                            "#text": "${items_list} = ['8906118410781 : 1']"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:14.325",
                            "@endtime": "20240814 11:51:14.334"
                          }
                        },
                        {
                          "@name": "Convert Item List To Dictionary",
                          "@library": "utilities",
                          "var": "${items_dict}",
                          "arg": "${my_dict.buy_items}",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:14.341",
                              "@level": "INFO",
                              "#text": "Current item: 8906118410781 : 1\nSplit result: ['8906118410781', '1']"
                            },
                            {
                              "@timestamp": "20240814 11:51:14.342",
                              "@level": "INFO",
                              "#text": "${items_dict} = {'8906118410781': 1}"
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:14.334",
                            "@endtime": "20240814 11:51:14.342"
                          }
                        },
                        {
                          "@name": "Convert Items To List",
                          "@library": "utilities",
                          "var": "${items_list}",
                          "arg": "${my_dict.get_items}",
                          "msg": {
                            "@timestamp": "20240814 11:51:28.161",
                            "@level": "INFO",
                            "#text": "${items_list} = ['NULL']"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:28.155",
                            "@endtime": "20240814 11:51:28.161"
                          }
                        }
                      ],
                      "if": [
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${clear_item_enabled}",
                            "kw": [
                              {
                                "@name": "Wait Until Keyword Succeeds",
                                "@library": "BuiltIn",
                                "arg": [
                                  "3",
                                  "3",
                                  "Click Element",
                                  "${clear_all_items}"
                                ],
                                "doc": "Runs the specified keyword and retries if it fails.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:14.323",
                                  "@endtime": "20240814 11:51:14.323"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${first_item_product_name}",
                                  "timeout=20s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:14.325",
                                  "@endtime": "20240814 11:51:14.325"
                                }
                              }
                            ],
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:14.323",
                              "@endtime": "20240814 11:51:14.325"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:14.323",
                            "@endtime": "20240814 11:51:14.325"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${items_list} != ['NULL']",
                            "kw": [
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.get_items}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:28.161",
                                  "@endtime": "20240814 11:51:28.161"
                                }
                              },
                              {
                                "@name": "Log",
                                "@library": "BuiltIn",
                                "arg": "${items_dict}",
                                "doc": "Logs the given message with the given level.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:28.161",
                                  "@endtime": "20240814 11:51:28.161"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${value}",
                                    "arg": "${values}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${product_search_bar}",
                                      "${key}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Wait Until Element Is Enabled",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${search_add_button}",
                                      "timeout=20s"
                                    ],
                                    "doc": "Waits until the element ``locator`` is enabled.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Sleep",
                                    "@library": "BuiltIn",
                                    "arg": "1s",
                                    "doc": "Pauses the test executed for the given time.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Click Element",
                                    "@library": "SeleniumLibrary",
                                    "arg": "${search_add_button}",
                                    "doc": "Click the element identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Run Keyword And Return Status",
                                    "@library": "BuiltIn",
                                    "var": "${multiple_product_present}",
                                    "arg": [
                                      "Element Should Be Visible",
                                      "${select_mrp}"
                                    ],
                                    "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Wait Until Element Contains",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${table}",
                                      "${key}",
                                      "timeout=20s"
                                    ],
                                    "doc": "Waits until the element ``locator`` contains ``text``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "@name": "Element Should Contain",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${item_cart_table}",
                                      "${key}"
                                    ],
                                    "doc": "Verifies that element ``locator`` contains text ``expected``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.163",
                                      "@endtime": "20240814 11:51:28.163"
                                    }
                                  },
                                  {
                                    "@name": "Run Keyword And Return Status",
                                    "@library": "BuiltIn",
                                    "var": "${quantity_in_piece}",
                                    "arg": [
                                      "Element Should Contain",
                                      "${quantity_row}",
                                      "Piece"
                                    ],
                                    "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.163",
                                      "@endtime": "20240814 11:51:28.163"
                                    }
                                  },
                                  {
                                    "@name": "Wait Until Element Is Enabled",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${product_search_bar}",
                                      "timeout=15s"
                                    ],
                                    "doc": "Waits until the element ``locator`` is enabled.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.166",
                                      "@endtime": "20240814 11:51:28.166"
                                    }
                                  }
                                ],
                                "if": [
                                  {
                                    "branch": {
                                      "@type": "IF",
                                      "@condition": "${multiple_product_present}",
                                      "kw": {
                                        "@name": "Add Multiple MRP Products",
                                        "@library": "promo_keyword",
                                        "status": {
                                          "@status": "NOT RUN",
                                          "@starttime": "20240814 11:51:28.162",
                                          "@endtime": "20240814 11:51:28.162"
                                        }
                                      },
                                      "status": {
                                        "@status": "NOT RUN",
                                        "@starttime": "20240814 11:51:28.162",
                                        "@endtime": "20240814 11:51:28.162"
                                      }
                                    },
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.162",
                                      "@endtime": "20240814 11:51:28.162"
                                    }
                                  },
                                  {
                                    "branch": [
                                      {
                                        "@type": "IF",
                                        "@condition": "${quantity_in_piece}",
                                        "kw": [
                                          {
                                            "@name": "Wait Until Element Is Enabled",
                                            "@library": "SeleniumLibrary",
                                            "arg": [
                                              "${quantity_in_piece_button}",
                                              "timeout=20s"
                                            ],
                                            "doc": "Waits until the element ``locator`` is enabled.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.163",
                                              "@endtime": "20240814 11:51:28.163"
                                            }
                                          },
                                          {
                                            "@name": "Click Button",
                                            "@library": "SeleniumLibrary",
                                            "arg": "${quantity_in_piece_button}",
                                            "doc": "Clicks the button identified by ``locator``.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.163",
                                              "@endtime": "20240814 11:51:28.163"
                                            }
                                          },
                                          {
                                            "@name": "Wait Until Element Is Visible",
                                            "@library": "SeleniumLibrary",
                                            "arg": [
                                              "${piece_modal}",
                                              "timeout=10s"
                                            ],
                                            "doc": "Waits until the element ``locator`` is visible.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.163",
                                              "@endtime": "20240814 11:51:28.163"
                                            }
                                          },
                                          {
                                            "@name": "Clear Element Text",
                                            "@library": "SeleniumLibrary",
                                            "arg": "${quantity_input}",
                                            "doc": "Clears the value of the text-input-element identified by ``locator``.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.163",
                                              "@endtime": "20240814 11:51:28.164"
                                            }
                                          },
                                          {
                                            "@name": "Input Text",
                                            "@library": "SeleniumLibrary",
                                            "arg": [
                                              "${quantity_input}",
                                              "${value}"
                                            ],
                                            "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.165",
                                              "@endtime": "20240814 11:51:28.165"
                                            }
                                          },
                                          {
                                            "@name": "Wait Until Element Is Visible",
                                            "@library": "SeleniumLibrary",
                                            "arg": [
                                              "${update_cart_quantity}",
                                              "timeout=20s"
                                            ],
                                            "doc": "Waits until the element ``locator`` is visible.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.165",
                                              "@endtime": "20240814 11:51:28.165"
                                            }
                                          },
                                          {
                                            "@name": "Click Button",
                                            "@library": "SeleniumLibrary",
                                            "arg": "${update_cart_quantity}",
                                            "doc": "Clicks the button identified by ``locator``.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.165",
                                              "@endtime": "20240814 11:51:28.165"
                                            }
                                          }
                                        ],
                                        "status": {
                                          "@status": "NOT RUN",
                                          "@starttime": "20240814 11:51:28.163",
                                          "@endtime": "20240814 11:51:28.165"
                                        }
                                      },
                                      {
                                        "@type": "ELSE",
                                        "kw": [
                                          {
                                            "@name": "Click Element",
                                            "@library": "SeleniumLibrary",
                                            "arg": "${custom_select_quantity_button}",
                                            "doc": "Click the element identified by ``locator``.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.165",
                                              "@endtime": "20240814 11:51:28.165"
                                            }
                                          },
                                          {
                                            "@name": "Replace String",
                                            "@library": "String",
                                            "var": "${custom_select_option}",
                                            "arg": [
                                              "${custom_select_options}",
                                              "option_value",
                                              "${value}"
                                            ],
                                            "doc": "Replaces ``search_for`` in the given ``string`` with ``replace_with``.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.165",
                                              "@endtime": "20240814 11:51:28.165"
                                            }
                                          },
                                          {
                                            "@name": "Wait Until Element Is Visible",
                                            "@library": "SeleniumLibrary",
                                            "arg": [
                                              "${custom_select_option}",
                                              "timeout=20s"
                                            ],
                                            "doc": "Waits until the element ``locator`` is visible.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.166",
                                              "@endtime": "20240814 11:51:28.166"
                                            }
                                          },
                                          {
                                            "@name": "Click Element",
                                            "@library": "SeleniumLibrary",
                                            "arg": "${custom_select_option}",
                                            "doc": "Click the element identified by ``locator``.",
                                            "status": {
                                              "@status": "NOT RUN",
                                              "@starttime": "20240814 11:51:28.166",
                                              "@endtime": "20240814 11:51:28.166"
                                            }
                                          }
                                        ],
                                        "status": {
                                          "@status": "NOT RUN",
                                          "@starttime": "20240814 11:51:28.165",
                                          "@endtime": "20240814 11:51:28.166"
                                        }
                                      }
                                    ],
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:28.163",
                                      "@endtime": "20240814 11:51:28.166"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:28.161",
                                  "@endtime": "20240814 11:51:28.166"
                                }
                              },
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:28.161",
                                "@endtime": "20240814 11:51:28.166"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:28.161",
                              "@endtime": "20240814 11:51:28.166"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:28.161",
                            "@endtime": "20240814 11:51:28.166"
                          }
                        }
                      ],
                      "for": {
                        "@flavor": "IN",
                        "var": "${item}",
                        "value": "@{items_dict.items()}",
                        "iter": {
                          "var": {
                            "@name": "${item}",
                            "#text": "('8906118410781', 1)"
                          },
                          "kw": [
                            {
                              "@name": "Set Variable",
                              "@library": "BuiltIn",
                              "var": "${key}",
                              "arg": "${item}[0]",
                              "doc": "Returns the given values which can then be assigned to a variables.",
                              "msg": {
                                "@timestamp": "20240814 11:51:14.352",
                                "@level": "INFO",
                                "#text": "${key} = 8906118410781"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:14.352",
                                "@endtime": "20240814 11:51:14.352"
                              }
                            },
                            {
                              "@name": "Set Variable",
                              "@library": "BuiltIn",
                              "var": "${values}",
                              "arg": "${item}[1]",
                              "doc": "Returns the given values which can then be assigned to a variables.",
                              "msg": {
                                "@timestamp": "20240814 11:51:14.353",
                                "@level": "INFO",
                                "#text": "${values} = 1"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:14.352",
                                "@endtime": "20240814 11:51:14.353"
                              }
                            },
                            {
                              "@name": "Convert To String",
                              "@library": "BuiltIn",
                              "var": "${value}",
                              "arg": "${values}",
                              "doc": "Converts the given item to a Unicode string.",
                              "msg": {
                                "@timestamp": "20240814 11:51:14.353",
                                "@level": "INFO",
                                "#text": "${value} = 1"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:14.353",
                                "@endtime": "20240814 11:51:14.353"
                              }
                            },
                            {
                              "@name": "Sleep",
                              "@library": "BuiltIn",
                              "arg": "1s",
                              "doc": "Pauses the test executed for the given time.",
                              "msg": {
                                "@timestamp": "20240814 11:51:15.353",
                                "@level": "INFO",
                                "#text": "Slept 1 second"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:14.353",
                                "@endtime": "20240814 11:51:15.353"
                              }
                            },
                            {
                              "@name": "Click Element",
                              "@library": "SeleniumLibrary",
                              "arg": "${product_search_bar}",
                              "doc": "Click the element identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:15.354",
                                "@level": "INFO",
                                "#text": "Clicking element '//input[@id=\"product-search\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:15.354",
                                "@endtime": "20240814 11:51:15.421"
                              }
                            },
                            {
                              "@name": "Input Text",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${product_search_bar}",
                                "${key}"
                              ],
                              "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:15.422",
                                "@level": "INFO",
                                "#text": "Typing text '8906118410781' into text field '//input[@id=\"product-search\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:15.421",
                                "@endtime": "20240814 11:51:15.543"
                              }
                            },
                            {
                              "@name": "Wait Until Element Is Enabled",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${search_add_button}",
                                "timeout=20s"
                              ],
                              "doc": "Waits until the element ``locator`` is enabled.",
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:15.543",
                                "@endtime": "20240814 11:51:15.804"
                              }
                            },
                            {
                              "@name": "Sleep",
                              "@library": "BuiltIn",
                              "arg": "1s",
                              "doc": "Pauses the test executed for the given time.",
                              "msg": {
                                "@timestamp": "20240814 11:51:16.806",
                                "@level": "INFO",
                                "#text": "Slept 1 second"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:15.805",
                                "@endtime": "20240814 11:51:16.806"
                              }
                            },
                            {
                              "@name": "Click Element",
                              "@library": "SeleniumLibrary",
                              "arg": "${search_add_button}",
                              "doc": "Click the element identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:16.807",
                                "@level": "INFO",
                                "#text": "Clicking element '//button[@class=\"btn alternative add-to-cart btn-info\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:16.806",
                                "@endtime": "20240814 11:51:16.913"
                              }
                            },
                            {
                              "@name": "Run Keyword And Return Status",
                              "@library": "BuiltIn",
                              "var": "${multiple_product_present}",
                              "arg": [
                                "Element Should Be Visible",
                                "${select_mrp}"
                              ],
                              "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                              "kw": {
                                "@name": "Element Should Be Visible",
                                "@library": "SeleniumLibrary",
                                "arg": "${select_mrp}",
                                "doc": "Verifies that the element identified by ``locator`` is visible.",
                                "msg": [
                                  {
                                    "@timestamp": "20240814 11:51:17.934",
                                    "@level": "INFO",
                                    "@html": "true",
                                    "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-6.png\"><img src=\"selenium-screenshot-6.png\" width=\"800px\"></a>"
                                  },
                                  {
                                    "@timestamp": "20240814 11:51:17.936",
                                    "@level": "FAIL",
                                    "#text": "Element with locator '//h5[@class='modal-title' and contains(text(),'Select MRP')]' not found."
                                  }
                                ],
                                "status": {
                                  "@status": "FAIL",
                                  "@starttime": "20240814 11:51:16.915",
                                  "@endtime": "20240814 11:51:17.937"
                                }
                              },
                              "msg": {
                                "@timestamp": "20240814 11:51:17.937",
                                "@level": "INFO",
                                "#text": "${multiple_product_present} = False"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:16.914",
                                "@endtime": "20240814 11:51:17.937"
                              }
                            },
                            {
                              "@name": "Wait Until Element Contains",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${table}",
                                "${key}",
                                "timeout=20s"
                              ],
                              "doc": "Waits until the element ``locator`` contains ``text``.",
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:17.937",
                                "@endtime": "20240814 11:51:18.853"
                              }
                            },
                            {
                              "@name": "Element Should Contain",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${item_cart_table}",
                                "${key}"
                              ],
                              "doc": "Verifies that element ``locator`` contains text ``expected``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:19.224",
                                "@level": "INFO",
                                "#text": "Element '//table[contains(@class,\"table b-table table cart-table mt-0 table-dark table-dark-bg b-table-row-selected td:first-child border-bottom-0 b-table-selectable b-table-select-single\")]' contains text '8906118410781'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:18.853",
                                "@endtime": "20240814 11:51:19.225"
                              }
                            },
                            {
                              "@name": "Get Text",
                              "@library": "SeleniumLibrary",
                              "var": "${unit_price_amount}",
                              "arg": "${price}",
                              "doc": "Returns the text value of the element identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:19.275",
                                "@level": "INFO",
                                "#text": "${unit_price_amount} = \u00e2\u201a\u00b9 1,100.00"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:19.225",
                                "@endtime": "20240814 11:51:19.275"
                              }
                            },
                            {
                              "@name": "Remove Characters",
                              "@library": "utilities",
                              "var": "${unit_price_amount}",
                              "arg": "${unit_price_amount}",
                              "msg": {
                                "@timestamp": "20240814 11:51:19.276",
                                "@level": "INFO",
                                "#text": "${unit_price_amount} = 1100.00"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:19.276",
                                "@endtime": "20240814 11:51:19.276"
                              }
                            },
                            {
                              "@name": "Convert To Number",
                              "@library": "BuiltIn",
                              "var": "${unit_price_amount}",
                              "arg": "${unit_price_amount}",
                              "doc": "Converts the given item to a floating point number.",
                              "msg": {
                                "@timestamp": "20240814 11:51:19.276",
                                "@level": "INFO",
                                "#text": "${unit_price_amount} = 1100.0"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:19.276",
                                "@endtime": "20240814 11:51:19.276"
                              }
                            },
                            {
                              "@name": "Set Test Variable",
                              "@library": "BuiltIn",
                              "arg": "${unit_price_amount}",
                              "doc": "Makes a variable available everywhere within the scope of the current test.",
                              "msg": {
                                "@timestamp": "20240814 11:51:19.276",
                                "@level": "INFO",
                                "#text": "${unit_price_amount} = 1100.0"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:19.276",
                                "@endtime": "20240814 11:51:19.277"
                              }
                            },
                            {
                              "@name": "Run Keyword And Return Status",
                              "@library": "BuiltIn",
                              "var": "${quantity_in_piece}",
                              "arg": [
                                "Element Should Contain",
                                "${quantity_row}",
                                "Piece"
                              ],
                              "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                              "kw": {
                                "@name": "Element Should Contain",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${quantity_row}",
                                  "Piece"
                                ],
                                "doc": "Verifies that element ``locator`` contains text ``expected``.",
                                "msg": [
                                  {
                                    "@timestamp": "20240814 11:51:19.913",
                                    "@level": "INFO",
                                    "@html": "true",
                                    "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-7.png\"><img src=\"selenium-screenshot-7.png\" width=\"800px\"></a>"
                                  },
                                  {
                                    "@timestamp": "20240814 11:51:19.913",
                                    "@level": "FAIL",
                                    "#text": "Element '(//td[@aria-colindex=\"3\"])[1]' should have contained text 'Piece' but its text was '1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500'."
                                  }
                                ],
                                "status": {
                                  "@status": "FAIL",
                                  "@starttime": "20240814 11:51:19.277",
                                  "@endtime": "20240814 11:51:19.916"
                                }
                              },
                              "msg": {
                                "@timestamp": "20240814 11:51:19.916",
                                "@level": "INFO",
                                "#text": "${quantity_in_piece} = False"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:19.277",
                                "@endtime": "20240814 11:51:19.916"
                              }
                            },
                            {
                              "@name": "Wait Until Element Is Enabled",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${product_search_bar}",
                                "timeout=15s"
                              ],
                              "doc": "Waits until the element ``locator`` is enabled.",
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:20.702",
                                "@endtime": "20240814 11:51:28.155"
                              }
                            }
                          ],
                          "if": [
                            {
                              "branch": {
                                "@type": "IF",
                                "@condition": "${multiple_product_present}",
                                "kw": {
                                  "@name": "Add Multiple MRP Products",
                                  "@library": "promo_keyword",
                                  "status": {
                                    "@status": "NOT RUN",
                                    "@starttime": "20240814 11:51:17.937",
                                    "@endtime": "20240814 11:51:17.937"
                                  }
                                },
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:17.937",
                                  "@endtime": "20240814 11:51:17.937"
                                }
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:17.937",
                                "@endtime": "20240814 11:51:17.937"
                              }
                            },
                            {
                              "branch": [
                                {
                                  "@type": "IF",
                                  "@condition": "${quantity_in_piece}",
                                  "kw": [
                                    {
                                      "@name": "Wait Until Element Is Enabled",
                                      "@library": "SeleniumLibrary",
                                      "arg": [
                                        "${quantity_in_piece_button}",
                                        "timeout=20s"
                                      ],
                                      "doc": "Waits until the element ``locator`` is enabled.",
                                      "status": {
                                        "@status": "NOT RUN",
                                        "@starttime": "20240814 11:51:19.916",
                                        "@endtime": "20240814 11:51:19.916"
                                      }
                                    },
                                    {
                                      "@name": "Click Button",
                                      "@library": "SeleniumLibrary",
                                      "arg": "${quantity_in_piece_button}",
                                      "doc": "Clicks the button identified by ``locator``.",
                                      "status": {
                                        "@status": "NOT RUN",
                                        "@starttime": "20240814 11:51:19.916",
                                        "@endtime": "20240814 11:51:19.917"
                                      }
                                    },
                                    {
                                      "@name": "Wait Until Element Is Visible",
                                      "@library": "SeleniumLibrary",
                                      "arg": [
                                        "${piece_modal}",
                                        "timeout=10s"
                                      ],
                                      "doc": "Waits until the element ``locator`` is visible.",
                                      "status": {
                                        "@status": "NOT RUN",
                                        "@starttime": "20240814 11:51:19.917",
                                        "@endtime": "20240814 11:51:19.917"
                                      }
                                    },
                                    {
                                      "@name": "Clear Element Text",
                                      "@library": "SeleniumLibrary",
                                      "arg": "${quantity_input}",
                                      "doc": "Clears the value of the text-input-element identified by ``locator``.",
                                      "status": {
                                        "@status": "NOT RUN",
                                        "@starttime": "20240814 11:51:19.917",
                                        "@endtime": "20240814 11:51:19.917"
                                      }
                                    },
                                    {
                                      "@name": "Input Text",
                                      "@library": "SeleniumLibrary",
                                      "arg": [
                                        "${quantity_input}",
                                        "${value}"
                                      ],
                                      "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                      "status": {
                                        "@status": "NOT RUN",
                                        "@starttime": "20240814 11:51:19.917",
                                        "@endtime": "20240814 11:51:19.917"
                                      }
                                    },
                                    {
                                      "@name": "Wait Until Element Is Visible",
                                      "@library": "SeleniumLibrary",
                                      "arg": [
                                        "${update_cart_quantity}",
                                        "timeout=20s"
                                      ],
                                      "doc": "Waits until the element ``locator`` is visible.",
                                      "status": {
                                        "@status": "NOT RUN",
                                        "@starttime": "20240814 11:51:19.917",
                                        "@endtime": "20240814 11:51:19.917"
                                      }
                                    },
                                    {
                                      "@name": "Click Button",
                                      "@library": "SeleniumLibrary",
                                      "arg": "${update_cart_quantity}",
                                      "doc": "Clicks the button identified by ``locator``.",
                                      "status": {
                                        "@status": "NOT RUN",
                                        "@starttime": "20240814 11:51:19.917",
                                        "@endtime": "20240814 11:51:19.917"
                                      }
                                    }
                                  ],
                                  "status": {
                                    "@status": "NOT RUN",
                                    "@starttime": "20240814 11:51:19.916",
                                    "@endtime": "20240814 11:51:19.917"
                                  }
                                },
                                {
                                  "@type": "ELSE",
                                  "kw": [
                                    {
                                      "@name": "Click Element",
                                      "@library": "SeleniumLibrary",
                                      "arg": "${custom_select_quantity_button}",
                                      "doc": "Click the element identified by ``locator``.",
                                      "msg": {
                                        "@timestamp": "20240814 11:51:19.917",
                                        "@level": "INFO",
                                        "#text": "Clicking element '(//select[@class=\"custom-select custom-select-sm\"])[1]'."
                                      },
                                      "status": {
                                        "@status": "PASS",
                                        "@starttime": "20240814 11:51:19.917",
                                        "@endtime": "20240814 11:51:20.196"
                                      }
                                    },
                                    {
                                      "@name": "Replace String",
                                      "@library": "String",
                                      "var": "${custom_select_option}",
                                      "arg": [
                                        "${custom_select_quantity}",
                                        "option_value",
                                        "${value}"
                                      ],
                                      "doc": "Replaces ``search_for`` in the given ``string`` with ``replace_with``.",
                                      "msg": {
                                        "@timestamp": "20240814 11:51:20.196",
                                        "@level": "INFO",
                                        "#text": "${custom_select_option} = //span[text()=\"ITEM\"]//ancestor::td//following-sibling::td//option[@value=\"1\"]"
                                      },
                                      "status": {
                                        "@status": "PASS",
                                        "@starttime": "20240814 11:51:20.196",
                                        "@endtime": "20240814 11:51:20.196"
                                      }
                                    },
                                    {
                                      "@name": "Replace String",
                                      "@library": "String",
                                      "var": "${custom_select_option}",
                                      "arg": [
                                        "${custom_select_option}",
                                        "ITEM",
                                        "${key}"
                                      ],
                                      "doc": "Replaces ``search_for`` in the given ``string`` with ``replace_with``.",
                                      "msg": {
                                        "@timestamp": "20240814 11:51:20.196",
                                        "@level": "INFO",
                                        "#text": "${custom_select_option} = //span[text()=\"8906118410781\"]//ancestor::td//following-sibling::td//option[@value=\"1\"]"
                                      },
                                      "status": {
                                        "@status": "PASS",
                                        "@starttime": "20240814 11:51:20.196",
                                        "@endtime": "20240814 11:51:20.196"
                                      }
                                    },
                                    {
                                      "@name": "Wait Until Element Is Visible",
                                      "@library": "SeleniumLibrary",
                                      "arg": [
                                        "${custom_select_option}",
                                        "timeout=20s"
                                      ],
                                      "doc": "Waits until the element ``locator`` is visible.",
                                      "status": {
                                        "@status": "PASS",
                                        "@starttime": "20240814 11:51:20.197",
                                        "@endtime": "20240814 11:51:20.344"
                                      }
                                    },
                                    {
                                      "@name": "Click Element",
                                      "@library": "SeleniumLibrary",
                                      "arg": "${custom_select_option}",
                                      "doc": "Click the element identified by ``locator``.",
                                      "msg": {
                                        "@timestamp": "20240814 11:51:20.345",
                                        "@level": "INFO",
                                        "#text": "Clicking element '//span[text()=\"8906118410781\"]//ancestor::td//following-sibling::td//option[@value=\"1\"]'."
                                      },
                                      "status": {
                                        "@status": "PASS",
                                        "@starttime": "20240814 11:51:20.344",
                                        "@endtime": "20240814 11:51:20.701"
                                      }
                                    }
                                  ],
                                  "status": {
                                    "@status": "PASS",
                                    "@starttime": "20240814 11:51:19.917",
                                    "@endtime": "20240814 11:51:20.701"
                                  }
                                }
                              ],
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:19.916",
                                "@endtime": "20240814 11:51:20.701"
                              }
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:14.351",
                            "@endtime": "20240814 11:51:28.155"
                          }
                        },
                        "status": {
                          "@status": "PASS",
                          "@starttime": "20240814 11:51:14.342",
                          "@endtime": "20240814 11:51:28.155"
                        }
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:13.794",
                        "@endtime": "20240814 11:51:28.166"
                      }
                    },
                    {
                      "@name": "Verify Item Is Added",
                      "@library": "add_to_cart_keyword",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{products}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:28.167",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_01', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:28.167",
                            "@endtime": "20240814 11:51:28.167"
                          }
                        },
                        {
                          "@name": "Convert Items To List",
                          "@library": "utilities",
                          "var": "${items_list}",
                          "arg": "${my_dict.buy_items}",
                          "msg": {
                            "@timestamp": "20240814 11:51:28.173",
                            "@level": "INFO",
                            "#text": "${items_list} = ['8906118410781 : 1']"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:28.168",
                            "@endtime": "20240814 11:51:28.173"
                          }
                        },
                        {
                          "@name": "Convert Item List To Dictionary",
                          "@library": "utilities",
                          "var": "${items_dict}",
                          "arg": "${my_dict.buy_items}",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:28.179",
                              "@level": "INFO",
                              "#text": "Current item: 8906118410781 : 1\nSplit result: ['8906118410781', '1']"
                            },
                            {
                              "@timestamp": "20240814 11:51:28.179",
                              "@level": "INFO",
                              "#text": "${items_dict} = {'8906118410781': 1}"
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:28.173",
                            "@endtime": "20240814 11:51:28.179"
                          }
                        },
                        {
                          "@name": "Sleep",
                          "@library": "BuiltIn",
                          "arg": "2",
                          "doc": "Pauses the test executed for the given time.",
                          "msg": {
                            "@timestamp": "20240814 11:51:30.180",
                            "@level": "INFO",
                            "#text": "Slept 2 seconds"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:28.179",
                            "@endtime": "20240814 11:51:30.180"
                          }
                        },
                        {
                          "@name": "Set Variable",
                          "@library": "BuiltIn",
                          "var": "${expected_cart_quantity}",
                          "arg": "0",
                          "doc": "Returns the given values which can then be assigned to a variables.",
                          "msg": {
                            "@timestamp": "20240814 11:51:30.180",
                            "@level": "INFO",
                            "#text": "${expected_cart_quantity} = 0"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:30.180",
                            "@endtime": "20240814 11:51:30.181"
                          }
                        },
                        {
                          "@name": "Convert To String",
                          "@library": "BuiltIn",
                          "var": "${expected_cart_quantity}",
                          "arg": "${expected_cart_quantity}",
                          "doc": "Converts the given item to a Unicode string.",
                          "msg": {
                            "@timestamp": "20240814 11:51:30.621",
                            "@level": "INFO",
                            "#text": "${expected_cart_quantity} = 1"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:30.621",
                            "@endtime": "20240814 11:51:30.621"
                          }
                        },
                        {
                          "@name": "Sleep",
                          "@library": "BuiltIn",
                          "arg": "1s",
                          "doc": "Pauses the test executed for the given time.",
                          "msg": {
                            "@timestamp": "20240814 11:51:31.621",
                            "@level": "INFO",
                            "#text": "Slept 1 second"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:30.621",
                            "@endtime": "20240814 11:51:31.621"
                          }
                        },
                        {
                          "@name": "Get Text",
                          "@library": "SeleniumLibrary",
                          "var": "${items_cart_quantity}",
                          "arg": "${cart_quantity}",
                          "doc": "Returns the text value of the element identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:31.667",
                            "@level": "INFO",
                            "#text": "${items_cart_quantity} = (1)"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:31.621",
                            "@endtime": "20240814 11:51:31.667"
                          }
                        },
                        {
                          "@name": "Remove Characters",
                          "@library": "utilities",
                          "var": "${items_cart_quantity}",
                          "arg": "${items_cart_quantity}",
                          "msg": {
                            "@timestamp": "20240814 11:51:31.667",
                            "@level": "INFO",
                            "#text": "${items_cart_quantity} = 1"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:31.667",
                            "@endtime": "20240814 11:51:31.667"
                          }
                        },
                        {
                          "@name": "Should Be Equal As Strings",
                          "@library": "BuiltIn",
                          "arg": [
                            "${expected_cart_quantity}",
                            "${items_cart_quantity}"
                          ],
                          "doc": "Fails if objects are unequal after converting them to strings.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:31.667",
                            "@endtime": "20240814 11:51:31.669"
                          }
                        }
                      ],
                      "for": {
                        "@flavor": "IN",
                        "var": "${item}",
                        "value": "@{items_dict.items()}",
                        "iter": {
                          "var": {
                            "@name": "${item}",
                            "#text": "('8906118410781', 1)"
                          },
                          "kw": [
                            {
                              "@name": "Set Variable",
                              "@library": "BuiltIn",
                              "var": "${key}",
                              "arg": "${item}[0]",
                              "doc": "Returns the given values which can then be assigned to a variables.",
                              "msg": {
                                "@timestamp": "20240814 11:51:30.194",
                                "@level": "INFO",
                                "#text": "${key} = 8906118410781"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:30.194",
                                "@endtime": "20240814 11:51:30.195"
                              }
                            },
                            {
                              "@name": "Set Variable",
                              "@library": "BuiltIn",
                              "var": "${values}",
                              "arg": "${item}[1]",
                              "doc": "Returns the given values which can then be assigned to a variables.",
                              "msg": {
                                "@timestamp": "20240814 11:51:30.195",
                                "@level": "INFO",
                                "#text": "${values} = 1"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:30.195",
                                "@endtime": "20240814 11:51:30.195"
                              }
                            },
                            {
                              "@name": "Convert To String",
                              "@library": "BuiltIn",
                              "var": "${value}",
                              "arg": "${values}",
                              "doc": "Converts the given item to a Unicode string.",
                              "msg": {
                                "@timestamp": "20240814 11:51:30.195",
                                "@level": "INFO",
                                "#text": "${value} = 1"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:30.195",
                                "@endtime": "20240814 11:51:30.195"
                              }
                            },
                            {
                              "@name": "Run Keyword And Return Status",
                              "@library": "BuiltIn",
                              "var": "${quantity_in_piece}",
                              "arg": [
                                "Page Should Contain Element",
                                "${quantity_in_piece_button}"
                              ],
                              "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                              "kw": {
                                "@name": "Page Should Contain Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${quantity_in_piece_button}",
                                "doc": "Verifies that element ``locator`` is found on the current page.",
                                "msg": [
                                  {
                                    "@timestamp": "20240814 11:51:30.566",
                                    "@level": "INFO",
                                    "@html": "true",
                                    "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-8.png\"><img src=\"selenium-screenshot-8.png\" width=\"800px\"></a>"
                                  },
                                  {
                                    "@timestamp": "20240814 11:51:30.566",
                                    "@level": "FAIL",
                                    "#text": "Page should have contained element '(//td[@aria-colindex=\"3\"]//button[@id=\"weight-btn-null\"])[1]' but did not."
                                  }
                                ],
                                "status": {
                                  "@status": "FAIL",
                                  "@starttime": "20240814 11:51:30.196",
                                  "@endtime": "20240814 11:51:30.575"
                                }
                              },
                              "msg": {
                                "@timestamp": "20240814 11:51:30.575",
                                "@level": "INFO",
                                "#text": "${quantity_in_piece} = False"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:30.195",
                                "@endtime": "20240814 11:51:30.575"
                              }
                            },
                            {
                              "@name": "Page Should Contain",
                              "@library": "SeleniumLibrary",
                              "arg": "${key}",
                              "doc": "Verifies that current page contains ``text``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:30.621",
                                "@level": "INFO",
                                "#text": "Current page contains text '8906118410781'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:30.576",
                                "@endtime": "20240814 11:51:30.621"
                              }
                            }
                          ],
                          "if": {
                            "branch": [
                              {
                                "@type": "IF",
                                "@condition": "${quantity_in_piece}",
                                "kw": [
                                  {
                                    "@name": "Convert To Number",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${values}",
                                    "doc": "Converts the given item to a floating point number.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:30.575",
                                      "@endtime": "20240814 11:51:30.575"
                                    }
                                  },
                                  {
                                    "@name": "Evaluate",
                                    "@library": "BuiltIn",
                                    "var": "${expected_cart_quantity}",
                                    "arg": "${expected_cart_quantity}+1",
                                    "doc": "Evaluates the given expression in Python and returns the result.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:30.576",
                                      "@endtime": "20240814 11:51:30.576"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:30.575",
                                  "@endtime": "20240814 11:51:30.576"
                                }
                              },
                              {
                                "@type": "ELSE",
                                "kw": {
                                  "@name": "Evaluate",
                                  "@library": "BuiltIn",
                                  "var": "${expected_cart_quantity}",
                                  "arg": "${expected_cart_quantity}+${values}",
                                  "doc": "Evaluates the given expression in Python and returns the result.",
                                  "msg": {
                                    "@timestamp": "20240814 11:51:30.576",
                                    "@level": "INFO",
                                    "#text": "${expected_cart_quantity} = 1"
                                  },
                                  "status": {
                                    "@status": "PASS",
                                    "@starttime": "20240814 11:51:30.576",
                                    "@endtime": "20240814 11:51:30.576"
                                  }
                                },
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:30.576",
                                  "@endtime": "20240814 11:51:30.576"
                                }
                              }
                            ],
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:30.575",
                              "@endtime": "20240814 11:51:30.576"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:30.194",
                            "@endtime": "20240814 11:51:30.621"
                          }
                        },
                        "status": {
                          "@status": "PASS",
                          "@starttime": "20240814 11:51:30.181",
                          "@endtime": "20240814 11:51:30.621"
                        }
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:28.166",
                        "@endtime": "20240814 11:51:31.669"
                      }
                    },
                    {
                      "@name": "Revoke Licence Key | API",
                      "@library": "login_keyword",
                      "@type": "TEARDOWN",
                      "arg": [
                        "${response}",
                        "${pos_data}"
                      ],
                      "kw": [
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{pos_data}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:31.671",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_01', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:31.669",
                            "@endtime": "20240814 11:51:31.671"
                          }
                        },
                        {
                          "@name": "Set Variable",
                          "@library": "BuiltIn",
                          "var": "${body}",
                          "arg": "${response}",
                          "doc": "Returns the given values which can then be assigned to a variables.",
                          "msg": {
                            "@timestamp": "20240814 11:51:31.671",
                            "@level": "INFO",
                            "#text": "${body} = {\"api_token\": \"Nk2thCwm7R9w5UuaOdeiDjV39YDAYmIH4ZjwhiDoJ7fWdyheH9\", \"v_id\": \"170\", \"store_id\": 12, \"licence\": \"492260724jMt\", \"vu_id\": 4883, \"terminal_id\": null, \"url\": \"/revoke-licence?\", \"trans_from..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:31.671",
                            "@endtime": "20240814 11:51:31.671"
                          }
                        },
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${header}",
                          "arg": [
                            "Content-Type=application/json",
                            "Connection=keep-alive"
                          ],
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:31.671",
                            "@level": "INFO",
                            "#text": "${header} = {'Content-Type': 'application/json', 'Connection': 'keep-alive'}"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:31.671",
                            "@endtime": "20240814 11:51:31.671"
                          }
                        },
                        {
                          "@name": "Create Session",
                          "@library": "RequestsLibrary",
                          "arg": [
                            "revoke",
                            "${base_url}",
                            "headers=${header}"
                          ],
                          "doc": "Create Session: create a HTTP session to a server",
                          "msg": {
                            "@timestamp": "20240814 11:51:31.672",
                            "@level": "INFO",
                            "#text": "Creating Session using : alias=revoke, url=https://app.api.gozwing.com/, headers={'Content-Type': 'application/json', 'Connection': 'keep-alive'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:31.671",
                            "@endtime": "20240814 11:51:31.673"
                          }
                        },
                        {
                          "@name": "POST On Session",
                          "@library": "RequestsLibrary",
                          "var": "${api_response}",
                          "arg": [
                            "revoke",
                            "/revoke-licence",
                            "data=${body}",
                            "headers=${header}"
                          ],
                          "doc": "Sends a POST request on a previously created HTTP Session.",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:31.853",
                              "@level": "WARN",
                              "#text": "Retrying (RetryAdapter(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B645861E0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /revoke-licence"
                            },
                            {
                              "@timestamp": "20240814 11:51:32.056",
                              "@level": "WARN",
                              "#text": "Retrying (RetryAdapter(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B645857C0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /revoke-licence"
                            },
                            {
                              "@timestamp": "20240814 11:51:32.459",
                              "@level": "WARN",
                              "#text": "Retrying (RetryAdapter(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B75182330>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /revoke-licence"
                            },
                            {
                              "@timestamp": "20240814 11:51:32.460",
                              "@level": "INFO",
                              "#text": "${api_response} = None"
                            },
                            {
                              "@timestamp": "20240814 11:51:32.461",
                              "@level": "FAIL",
                              "#text": "ConnectionError: HTTPSConnectionPool(host='app.api.gozwing.com', port=443): Max retries exceeded with url: /revoke-licence (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B751828A0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\"))"
                            }
                          ],
                          "status": {
                            "@status": "FAIL",
                            "@starttime": "20240814 11:51:31.673",
                            "@endtime": "20240814 11:51:32.530"
                          }
                        },
                        {
                          "@name": "Reload Page",
                          "@library": "SeleniumLibrary",
                          "doc": "Simulates user reloading page.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:32.531",
                            "@endtime": "20240814 11:51:34.902"
                          }
                        },
                        {
                          "@name": "Logout After Revoke",
                          "@library": "login_keyword",
                          "arg": [
                            "${response}",
                            "${my_dict}"
                          ],
                          "kw": [
                            {
                              "@name": "Modify Json Data",
                              "@library": "utilities",
                              "var": "${updated_response}",
                              "arg": [
                                "${response}",
                                "${my_dict.user_mobile}"
                              ],
                              "msg": [
                                {
                                  "@timestamp": "20240814 11:51:34.913",
                                  "@level": "INFO",
                                  "#text": "${updated_response} = None"
                                },
                                {
                                  "@timestamp": "20240814 11:51:34.913",
                                  "@level": "FAIL",
                                  "#text": "Resolving variable '${my_dict.user_mobile}' failed: AttributeError: user_mobile"
                                }
                              ],
                              "status": {
                                "@status": "FAIL",
                                "@starttime": "20240814 11:51:34.903",
                                "@endtime": "20240814 11:51:34.913"
                              }
                            },
                            {
                              "@name": "Create Dictionary",
                              "@library": "BuiltIn",
                              "var": "${header}",
                              "arg": [
                                "Content-Type=application/json",
                                "Connection=keep-alive"
                              ],
                              "doc": "Creates and returns a dictionary based on the given ``items``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:34.914",
                                "@level": "INFO",
                                "#text": "${header} = {'Content-Type': 'application/json', 'Connection': 'keep-alive'}"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:34.914",
                                "@endtime": "20240814 11:51:34.914"
                              }
                            },
                            {
                              "@name": "Create Session",
                              "@library": "RequestsLibrary",
                              "arg": [
                                "logout",
                                "${BASE_URL}",
                                "headers=${header}"
                              ],
                              "doc": "Create Session: create a HTTP session to a server",
                              "msg": {
                                "@timestamp": "20240814 11:51:34.914",
                                "@level": "INFO",
                                "#text": "Creating Session using : alias=logout, url=https://app.api.gozwing.com/, headers={'Content-Type': 'application/json', 'Connection': 'keep-alive'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:34.914",
                                "@endtime": "20240814 11:51:34.915"
                              }
                            },
                            {
                              "@name": "GET On Session",
                              "@library": "RequestsLibrary",
                              "var": "${api_response}",
                              "arg": [
                                "logout",
                                "/vendor/logout",
                                "data=${updated_response}",
                                "headers=${header}"
                              ],
                              "doc": "Sends a GET request on a previously created HTTP Session.",
                              "msg": [
                                {
                                  "@timestamp": "20240814 11:51:34.917",
                                  "@level": "WARN",
                                  "#text": "Retrying (RetryAdapter(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519F5F0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /vendor/logout"
                                },
                                {
                                  "@timestamp": "20240814 11:51:35.160",
                                  "@level": "WARN",
                                  "#text": "Retrying (RetryAdapter(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519F890>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /vendor/logout"
                                },
                                {
                                  "@timestamp": "20240814 11:51:35.564",
                                  "@level": "WARN",
                                  "#text": "Retrying (RetryAdapter(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519FB00>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /vendor/logout"
                                },
                                {
                                  "@timestamp": "20240814 11:51:35.566",
                                  "@level": "INFO",
                                  "#text": "${api_response} = None"
                                },
                                {
                                  "@timestamp": "20240814 11:51:35.566",
                                  "@level": "FAIL",
                                  "#text": "ConnectionError: HTTPSConnectionPool(host='app.api.gozwing.com', port=443): Max retries exceeded with url: /vendor/logout (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519FD10>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\"))"
                                }
                              ],
                              "status": {
                                "@status": "FAIL",
                                "@starttime": "20240814 11:51:34.915",
                                "@endtime": "20240814 11:51:35.569"
                              }
                            },
                            {
                              "@name": "Log",
                              "@library": "BuiltIn",
                              "arg": "API Response: ${api_response}",
                              "doc": "Logs the given message with the given level.",
                              "msg": {
                                "@timestamp": "20240814 11:51:35.570",
                                "@level": "INFO",
                                "#text": "API Response: None"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:35.569",
                                "@endtime": "20240814 11:51:35.570"
                              }
                            }
                          ],
                          "status": {
                            "@status": "FAIL",
                            "@starttime": "20240814 11:51:34.902",
                            "@endtime": "20240814 11:51:35.570"
                          }
                        },
                        {
                          "@name": "Delete All Cookies",
                          "@library": "SeleniumLibrary",
                          "doc": "Deletes all cookies.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:35.571",
                            "@endtime": "20240814 11:51:35.744"
                          }
                        },
                        {
                          "@name": "Execute Javascript",
                          "@library": "SeleniumLibrary",
                          "arg": "window.localStorage.clear();",
                          "doc": "Executes the given JavaScript code with possible arguments.",
                          "msg": {
                            "@timestamp": "20240814 11:51:35.744",
                            "@level": "INFO",
                            "#text": "Executing JavaScript:\nwindow.localStorage.clear();\nWithout any arguments."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:35.744",
                            "@endtime": "20240814 11:51:35.759"
                          }
                        },
                        {
                          "@name": "Execute Javascript",
                          "@library": "SeleniumLibrary",
                          "arg": "window.sessionStorage.clear();",
                          "doc": "Executes the given JavaScript code with possible arguments.",
                          "msg": {
                            "@timestamp": "20240814 11:51:35.760",
                            "@level": "INFO",
                            "#text": "Executing JavaScript:\nwindow.sessionStorage.clear();\nWithout any arguments."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:35.759",
                            "@endtime": "20240814 11:51:35.776"
                          }
                        },
                        {
                          "@name": "Reload Page",
                          "@library": "SeleniumLibrary",
                          "doc": "Simulates user reloading page.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:35.777",
                            "@endtime": "20240814 11:51:36.301"
                          }
                        }
                      ],
                      "status": {
                        "@status": "FAIL",
                        "@starttime": "20240814 11:51:31.669",
                        "@endtime": "20240814 11:51:36.301",
                        "#text": "Several failures occurred:\n\n1) ConnectionError: HTTPSConnectionPool(host='app.api.gozwing.com', port=443): Max retries exceeded with url: /revoke-licence (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B751828A0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\"))\n\n2) Resolving variable '${my_dict.user_mobile}' failed: AttributeError: user_mobile\n\n3) ConnectionError: HTTPSConnectionPool(host='app.api.gozwing.com', port=443): Max retries exceeded with url: /vendor/logout (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519FD10>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\"))"
                      }
                    }
                  ],
                  "status": {
                    "@status": "FAIL",
                    "@starttime": "20240814 11:50:47.040",
                    "@endtime": "20240814 11:51:36.303",
                    "#text": "Teardown failed:\nSeveral failures occurred:\n\n1) ConnectionError: HTTPSConnectionPool(host='app.api.gozwing.com', port=443): Max retries exceeded with url: /revoke-licence (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B751828A0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\"))\n\n2) Resolving variable '${my_dict.user_mobile}' failed: AttributeError: user_mobile\n\n3) ConnectionError: HTTPSConnectionPool(host='app.api.gozwing.com', port=443): Max retries exceeded with url: /vendor/logout (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519FD10>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\"))"
                  }
                },
                {
                  "@id": "s1-s1-s1-s1-s1-t2",
                  "@name": "Zwing_O_2 Add Normal sku with weighted UOM to cart >> Edit Cart Qty mode",
                  "@line": "31",
                  "kw": [
                    {
                      "@name": "Open Application | POS",
                      "@library": "login_keyword",
                      "@type": "SETUP",
                      "kw": [
                        {
                          "@name": "Open Browser",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${${ENV}_URL}",
                            "${browser}"
                          ],
                          "doc": "Opens a new browser instance to the optional ``url``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:36.311",
                            "@level": "INFO",
                            "#text": "Opening browser 'chrome' to base url ' https://staging.app.gozwing.com/'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:36.310",
                            "@endtime": "20240814 11:51:44.653"
                          }
                        },
                        {
                          "@name": "Set Window Size",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${window_width}",
                            "${window_height}"
                          ],
                          "doc": "Sets current windows size to given ``width`` and ``height``.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:44.655",
                            "@endtime": "20240814 11:51:45.041"
                          }
                        }
                      ],
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:36.310",
                        "@endtime": "20240814 11:51:45.041"
                      }
                    },
                    {
                      "@name": "Get Test Data File",
                      "@library": "login_keyword",
                      "var": "${POS_TD}",
                      "arg": [
                        "${ENV}",
                        "${STAGING_TD}",
                        "${PROD_TD}"
                      ],
                      "kw": [
                        {
                          "@name": "Run Keyword If",
                          "@library": "BuiltIn",
                          "var": "${test_data_file}",
                          "arg": [
                            "'${env}' == 'PROD'",
                            "Set Variable",
                            "${PROD_TD}",
                            "ELSE",
                            "Set Variable",
                            "${STAGING_TD}"
                          ],
                          "doc": "Runs the given keyword with the given arguments, if ``condition`` is true.",
                          "kw": {
                            "@name": "Set Variable",
                            "@library": "BuiltIn",
                            "arg": "${STAGING_TD}",
                            "doc": "Returns the given values which can then be assigned to a variables.",
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:45.043",
                              "@endtime": "20240814 11:51:45.044"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:45.044",
                            "@level": "INFO",
                            "#text": "${test_data_file} = C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS\\Billing\\..\\..\\..\\TestData\\Staging\\Web_POS\\Billing\\add_to_cart_test_data.xlsx"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:45.043",
                            "@endtime": "20240814 11:51:45.044"
                          }
                        },
                        {
                          "@name": "Log",
                          "@library": "BuiltIn",
                          "arg": "${test_data_file}",
                          "doc": "Logs the given message with the given level.",
                          "msg": {
                            "@timestamp": "20240814 11:51:45.044",
                            "@level": "INFO",
                            "#text": "C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS\\Billing\\..\\..\\..\\TestData\\Staging\\Web_POS\\Billing\\add_to_cart_test_data.xlsx"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:45.044",
                            "@endtime": "20240814 11:51:45.044"
                          }
                        }
                      ],
                      "msg": {
                        "@timestamp": "20240814 11:51:45.045",
                        "@level": "INFO",
                        "#text": "${POS_TD} = C:\\Users\\Saloni\\Desktop\\Ginesys\\Zwing_repo\\zwing-qa-automation\\TestCases\\Web_POS\\Billing\\..\\..\\..\\TestData\\Staging\\Web_POS\\Billing\\add_to_cart_test_data.xlsx"
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:45.042",
                        "@endtime": "20240814 11:51:45.045"
                      }
                    },
                    {
                      "@name": "Fetch Testdata By Id",
                      "@library": "utilities",
                      "var": "${pos_data}",
                      "arg": [
                        "${POS_TD}",
                        "TC_02"
                      ],
                      "msg": {
                        "@timestamp": "20240814 11:51:45.096",
                        "@level": "INFO",
                        "#text": "${pos_data} = {'TC_Id': 'TC_02', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:45.045",
                        "@endtime": "20240814 11:51:45.097"
                      }
                    },
                    {
                      "@name": "Login With Valid Username And Password | POS",
                      "@library": "login_keyword",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Inject JavaScript For Fetch",
                          "@library": "login_keyword",
                          "kw": {
                            "@name": "Execute Javascript",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "window._originalFetch = window.fetch;",
                              "window.fetch = function() {",
                              "return window._originalFetch.apply(this, arguments).then(function(response) {",
                              "response.clone().json().then(function(data) {",
                              "if (!window.apiLogs) window.apiLogs = [];",
                              "window.apiLogs.push({",
                              "type: 'fetch',",
                              "request: arguments[1],",
                              "response: data",
                              "});",
                              "});",
                              "return response;",
                              "});",
                              "};"
                            ],
                            "doc": "Executes the given JavaScript code with possible arguments.",
                            "msg": {
                              "@timestamp": "20240814 11:51:45.105",
                              "@level": "INFO",
                              "#text": "Executing JavaScript:\nwindow._originalFetch = window.fetch;window.fetch = function() {return window._originalFetch.apply(this, arguments).then(function(response) {response.clone().json().then(function(data) {if (!window.apiLogs) window.apiLogs = [];window.apiLogs.push({type: 'fetch',request: arguments[1],response: data});});return response;});};\nWithout any arguments."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:45.103",
                              "@endtime": "20240814 11:51:45.132"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:45.101",
                            "@endtime": "20240814 11:51:45.132"
                          }
                        },
                        {
                          "@name": "Inject JavaScript For XHR",
                          "@library": "login_keyword",
                          "kw": {
                            "@name": "Execute Javascript",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "(function() {",
                              "var originalXhrOpen = XMLHttpRequest.prototype.open;",
                              "var originalXhrSend = XMLHttpRequest.prototype.send;",
                              "XMLHttpRequest.prototype.open = function() {",
                              "this._url = arguments[1];",
                              "return originalXhrOpen.apply(this, arguments);",
                              "};",
                              "XMLHttpRequest.prototype.send = function() {",
                              "this.addEventListener('load', function() {",
                              "if (!window.apiLogs) window.apiLogs = [];",
                              "window.apiLogs.push({",
                              "type: 'xhr',",
                              "request: this._url,",
                              "response: this.responseText",
                              "});",
                              "});",
                              "return originalXhrSend.apply(this, arguments);",
                              "};",
                              "})();"
                            ],
                            "doc": "Executes the given JavaScript code with possible arguments.",
                            "msg": {
                              "@timestamp": "20240814 11:51:45.134",
                              "@level": "INFO",
                              "#text": "Executing JavaScript:\n(function() {var originalXhrOpen = XMLHttpRequest.prototype.open;var originalXhrSend = XMLHttpRequest.prototype.send;XMLHttpRequest.prototype.open = function() {this._url = arguments[1];return originalXhrOpen.apply(this, arguments);};XMLHttpRequest.prototype.send = function() {this.addEventListener('load', function() {if (!window.apiLogs) window.apiLogs = [];window.apiLogs.push({type: 'xhr',request: this._url,response: this.responseText});});return originalXhrSend.apply(this, arguments);};})();\nWithout any arguments."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:45.133",
                              "@endtime": "20240814 11:51:45.143"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:45.133",
                            "@endtime": "20240814 11:51:45.143"
                          }
                        },
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{search_data}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:45.144",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_02', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:45.143",
                            "@endtime": "20240814 11:51:45.144"
                          }
                        },
                        {
                          "@name": "Input Text",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${serial_key}",
                            "${my_dict.serial_key}"
                          ],
                          "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:45.158",
                            "@level": "INFO",
                            "#text": "Typing text '492260724jMt' into text field '//input[@id=\"license-input\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:45.144",
                            "@endtime": "20240814 11:51:45.373"
                          }
                        },
                        {
                          "@name": "Click Button",
                          "@library": "SeleniumLibrary",
                          "arg": "${register_button}",
                          "doc": "Clicks the button identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:45.377",
                            "@level": "INFO",
                            "#text": "Clicking button '//button[@id=\"register-key\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:45.375",
                            "@endtime": "20240814 11:51:46.297"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${pos_username}",
                            "timeout=5s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:46.297",
                            "@endtime": "20240814 11:51:47.048"
                          }
                        },
                        {
                          "@name": "Input Text",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${pos_username}",
                            "${my_dict.username_pos}"
                          ],
                          "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:47.065",
                            "@level": "INFO",
                            "#text": "Typing text 'B_add_to_cart_user1_p1' into text field '//input[@id=\"login-user\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:47.050",
                            "@endtime": "20240814 11:51:47.353"
                          }
                        },
                        {
                          "@name": "Click Button",
                          "@library": "SeleniumLibrary",
                          "arg": "${pos_continue_button}",
                          "doc": "Clicks the button identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:47.354",
                            "@level": "INFO",
                            "#text": "Clicking button '//button[@id=\"login-button\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:47.353",
                            "@endtime": "20240814 11:51:47.487"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${pos_password}",
                            "timeout=5s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:47.487",
                            "@endtime": "20240814 11:51:47.763"
                          }
                        },
                        {
                          "@name": "Input Text",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${pos_password}",
                            "${my_dict.password_pos}"
                          ],
                          "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:47.780",
                            "@level": "INFO",
                            "#text": "Typing text '123456' into text field '//input[@id=\"login-password\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:47.763",
                            "@endtime": "20240814 11:51:48.026"
                          }
                        },
                        {
                          "@name": "Click Button",
                          "@library": "SeleniumLibrary",
                          "arg": "${pos_continue_button}",
                          "doc": "Clicks the button identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:48.028",
                            "@level": "INFO",
                            "#text": "Clicking button '//button[@id=\"login-button\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:48.027",
                            "@endtime": "20240814 11:51:48.162"
                          }
                        },
                        {
                          "@name": "Wait Until Page Contains Element",
                          "@library": "SeleniumLibrary",
                          "arg": "${in_store}",
                          "doc": "Waits until the element ``locator`` appears on the current page.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:48.162",
                            "@endtime": "20240814 11:51:50.146"
                          }
                        },
                        {
                          "@name": "Execute Javascript",
                          "@library": "SeleniumLibrary",
                          "var": "${logs}",
                          "arg": "return window.apiLogs;",
                          "doc": "Executes the given JavaScript code with possible arguments.",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:50.147",
                              "@level": "INFO",
                              "#text": "Executing JavaScript:\nreturn window.apiLogs;\nWithout any arguments."
                            },
                            {
                              "@timestamp": "20240814 11:51:50.181",
                              "@level": "INFO",
                              "#text": "${logs} = [{'request': 'https://staging.api.gozwing.com/cash-register/tag-licence', 'response': '{\"status\":\"success\",\"message\":\"Tagged successfully to cash-register.\",\"udidtoken\":\"$2y$10$UW0vMbEL6u4yBziex4RUW.f..."
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.146",
                            "@endtime": "20240814 11:51:50.181"
                          }
                        },
                        {
                          "@name": "Extract Udidtoken",
                          "@library": "utilities",
                          "var": "${udidtoken}",
                          "arg": "${logs}",
                          "msg": {
                            "@timestamp": "20240814 11:51:50.184",
                            "@level": "INFO",
                            "#text": "${udidtoken} = $2y$10$UW0vMbEL6u4yBziex4RUW.f3FCWBmzlv2hdwzoj7.8O9jecsLf9WS"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.182",
                            "@endtime": "20240814 11:51:50.185"
                          }
                        },
                        {
                          "@name": "Execute Javascript",
                          "@library": "SeleniumLibrary",
                          "var": "${token}",
                          "arg": "return localStorage.getItem('operations');",
                          "doc": "Executes the given JavaScript code with possible arguments.",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:50.187",
                              "@level": "INFO",
                              "#text": "Executing JavaScript:\nreturn localStorage.getItem('operations');\nWithout any arguments."
                            },
                            {
                              "@timestamp": "20240814 11:51:50.202",
                              "@level": "INFO",
                              "#text": "${token} = {\"sessions\":{\"organisation_id\":\"170\",\"user_id\":4883,\"forceLogin\":0,\"loading\":false,\"syncLoading\":true,\"user\":{\"id\":4883,\"v_id\":\"170\",\"employee_code\":\"1\",\"sso_user_id\":null,\"vendor_user_random\":null,\"s..."
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.185",
                            "@endtime": "20240814 11:51:50.202"
                          }
                        },
                        {
                          "@name": "Extract Required Fields",
                          "@library": "utilities",
                          "var": "${extracted_data}",
                          "arg": "${token}",
                          "msg": {
                            "@timestamp": "20240814 11:51:50.204",
                            "@level": "INFO",
                            "#text": "${extracted_data} = {\n    \"api_token\": \"bTudS95f4VszPG4MRpt4eaDWKpazLXbzw9aiGJqJpSta8iscDF\",\n    \"v_id\": \"170\",\n    \"store_id\": 12,\n    \"licence\": null,\n    \"vu_id\": 4883,\n    \"terminal_id\": null,\n    \"url\": \"/revoke-lic..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.202",
                            "@endtime": "20240814 11:51:50.204"
                          }
                        },
                        {
                          "@name": "Merge And Update Data With Json Output",
                          "@library": "utilities",
                          "var": "${updated_data}",
                          "arg": [
                            "${EXTRACTED_DATA}",
                            "${udidtoken}",
                            "${my_dict.serial_key}"
                          ],
                          "msg": {
                            "@timestamp": "20240814 11:51:50.222",
                            "@level": "INFO",
                            "#text": "${updated_data} = {\"api_token\": \"bTudS95f4VszPG4MRpt4eaDWKpazLXbzw9aiGJqJpSta8iscDF\", \"v_id\": \"170\", \"store_id\": 12, \"licence\": \"492260724jMt\", \"vu_id\": 4883, \"terminal_id\": null, \"url\": \"/revoke-licence?\", \"trans_from..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.205",
                            "@endtime": "20240814 11:51:50.222"
                          }
                        },
                        {
                          "@name": "Log",
                          "@library": "BuiltIn",
                          "arg": "${updated_data}",
                          "doc": "Logs the given message with the given level.",
                          "msg": {
                            "@timestamp": "20240814 11:51:50.223",
                            "@level": "INFO",
                            "#text": "{\"api_token\": \"bTudS95f4VszPG4MRpt4eaDWKpazLXbzw9aiGJqJpSta8iscDF\", \"v_id\": \"170\", \"store_id\": 12, \"licence\": \"492260724jMt\", \"vu_id\": 4883, \"terminal_id\": null, \"url\": \"/revoke-licence?\", \"trans_from\": \"CLOUD_TAB_WEB\", \"session_id\": 0, \"udidtoken\": \"$2y$10$UW0vMbEL6u4yBziex4RUW.f3FCWBmzlv2hdwzoj7.8O9jecsLf9WS\"}"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.223",
                            "@endtime": "20240814 11:51:50.223"
                          }
                        }
                      ],
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:45.099",
                        "@endtime": "20240814 11:51:50.224"
                      }
                    },
                    {
                      "@name": "Open The Session",
                      "@library": "promo_keyword",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{search_data}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:50.228",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_02', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.227",
                            "@endtime": "20240814 11:51:50.228"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${catalog_update_failed}",
                          "arg": [
                            "Element Should Be Visible",
                            "${catalog_update_failed_heading}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": "${catalog_update_failed_heading}",
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:50.609",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-9.png\"><img src=\"selenium-screenshot-9.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:50.609",
                                "@level": "FAIL",
                                "#text": "Element with locator '//h5[contains(text(),\"Catalog Update Failed\")]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:50.229",
                              "@endtime": "20240814 11:51:50.612"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:50.612",
                            "@level": "INFO",
                            "#text": "${catalog_update_failed} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.228",
                            "@endtime": "20240814 11:51:50.612"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${catalog_update}",
                          "arg": [
                            "Wait Until Page Contains Element",
                            "${done_progress}",
                            "timeout=10"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Wait Until Page Contains Element",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "${done_progress}",
                              "timeout=10"
                            ],
                            "doc": "Waits until the element ``locator`` appears on the current page.",
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:50.614",
                              "@endtime": "20240814 11:51:50.644"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:50.644",
                            "@level": "INFO",
                            "#text": "${catalog_update} = True"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.614",
                            "@endtime": "20240814 11:51:50.644"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${closing_balance_visible}",
                          "arg": [
                            "Element Should Be Visible",
                            "${closing_balance}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": "${closing_balance}",
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:51.040",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-10.png\"><img src=\"selenium-screenshot-10.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:51.040",
                                "@level": "FAIL",
                                "#text": "Element with locator '//div//header//h5[@class=\"modal-title\"and contains(text(),\"Close Session\")]//following::div[@class=\"col-md-12 col-lg-12\"]//input[@class=\"w-100 form-control form-control-lg\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:50.800",
                              "@endtime": "20240814 11:51:51.042"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:51.044",
                            "@level": "INFO",
                            "#text": "${closing_balance_visible} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.799",
                            "@endtime": "20240814 11:51:51.044"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${closing_balance_specify_denomination_visible}",
                          "arg": [
                            "Element Should Be Visible",
                            "${closing_balance_note_tab}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": "${closing_balance_note_tab}",
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:51.264",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-11.png\"><img src=\"selenium-screenshot-11.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:51.265",
                                "@level": "FAIL",
                                "#text": "Element with locator '//h5[text()=\"Close Session\"]//ancestor::div//a[(contains(text(),\"Notes\")) and @role=\"tab\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:51.050",
                              "@endtime": "20240814 11:51:51.268"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:51.268",
                            "@level": "INFO",
                            "#text": "${closing_balance_specify_denomination_visible} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.049",
                            "@endtime": "20240814 11:51:51.268"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${opening_session_present}",
                          "arg": [
                            "Element Should Be Visible",
                            "${opening_balance}",
                            "timeout=10s"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "${opening_balance}",
                              "timeout=10s"
                            ],
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:51.525",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-12.png\"><img src=\"selenium-screenshot-12.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:51.526",
                                "@level": "FAIL",
                                "#text": "Element with locator '//div//header//h5[@class=\"modal-title\"and contains(text(),\"Open Session\")]//following::div[@class=\"col-md-12 col-lg-12\"]//input[@class=\"w-100 form-control form-control-lg\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:51.272",
                              "@endtime": "20240814 11:51:51.529"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:51.530",
                            "@level": "INFO",
                            "#text": "${opening_session_present} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.272",
                            "@endtime": "20240814 11:51:51.530"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${opening_session_specify_denomination_present}",
                          "arg": [
                            "Element Should Be Visible",
                            "${open_session_notes_tab}",
                            "timeout=10s"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "${open_session_notes_tab}",
                              "timeout=10s"
                            ],
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:51.733",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-13.png\"><img src=\"selenium-screenshot-13.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:51.733",
                                "@level": "FAIL",
                                "#text": "Element with locator '//h5[text()=\"Open Session\"]//ancestor::div//a[(contains(text(),\"Notes\")) and @role=\"tab\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:51.534",
                              "@endtime": "20240814 11:51:51.734"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:51.735",
                            "@level": "INFO",
                            "#text": "${opening_session_specify_denomination_present} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.534",
                            "@endtime": "20240814 11:51:51.735"
                          }
                        }
                      ],
                      "if": [
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${catalog_update_failed}",
                            "kw": {
                              "@name": "Click Button",
                              "@library": "SeleniumLibrary",
                              "arg": "${catalog_close_button}",
                              "doc": "Clicks the button identified by ``locator``.",
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:50.612",
                                "@endtime": "20240814 11:51:50.612"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:50.612",
                              "@endtime": "20240814 11:51:50.613"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.612",
                            "@endtime": "20240814 11:51:50.614"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${catalog_update}",
                            "kw": {
                              "@name": "Click Button",
                              "@library": "SeleniumLibrary",
                              "arg": "${done_progress}",
                              "doc": "Clicks the button identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:50.646",
                                "@level": "INFO",
                                "#text": "Clicking button '//button[@id=\"done-progress\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:50.645",
                                "@endtime": "20240814 11:51:50.798"
                              }
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:50.645",
                              "@endtime": "20240814 11:51:50.799"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:50.645",
                            "@endtime": "20240814 11:51:50.799"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${closing_balance_visible}",
                            "kw": [
                              {
                                "@name": "Convert Items To List",
                                "@library": "utilities",
                                "var": "${items_list}",
                                "arg": "${my_dict.closing_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.044",
                                  "@endtime": "20240814 11:51:51.044"
                                }
                              },
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.closing_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.044",
                                  "@endtime": "20240814 11:51:51.045"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${force_close_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.046",
                                  "@endtime": "20240814 11:51:51.046"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${force_close_button}",
                                  "timeout=20s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.047",
                                  "@endtime": "20240814 11:51:51.047"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${opening_balance}",
                                  "timeout=20s"
                                ],
                                "doc": "Waits until the element ``locator`` is visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.047",
                                  "@endtime": "20240814 11:51:51.047"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.045",
                                      "@endtime": "20240814 11:51:51.045"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${key}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.045",
                                      "@endtime": "20240814 11:51:51.046"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.046",
                                      "@endtime": "20240814 11:51:51.046"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${closing_balance}",
                                      "${key}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.046",
                                      "@endtime": "20240814 11:51:51.046"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.045",
                                  "@endtime": "20240814 11:51:51.046"
                                }
                              },
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:51.045",
                                "@endtime": "20240814 11:51:51.046"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:51.044",
                              "@endtime": "20240814 11:51:51.047"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.044",
                            "@endtime": "20240814 11:51:51.049"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${closing_balance_specify_denomination_visible}",
                            "kw": [
                              {
                                "@name": "Convert Items To List",
                                "@library": "utilities",
                                "var": "${items_list}",
                                "arg": "${my_dict.closing_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.268",
                                  "@endtime": "20240814 11:51:51.268"
                                }
                              },
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.closing_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.269",
                                  "@endtime": "20240814 11:51:51.269"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${open_session_submit_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.271",
                                  "@endtime": "20240814 11:51:51.271"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${closing_balance_note_tab}",
                                  "timeout=10s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.271",
                                  "@endtime": "20240814 11:51:51.272"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.269",
                                      "@endtime": "20240814 11:51:51.269"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${key}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.269",
                                      "@endtime": "20240814 11:51:51.269"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.269",
                                      "@endtime": "20240814 11:51:51.269"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${value}",
                                    "arg": "${values}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.271",
                                      "@endtime": "20240814 11:51:51.271"
                                    }
                                  },
                                  {
                                    "@name": "Replace String",
                                    "@library": "String",
                                    "var": "${balance_field}",
                                    "arg": [
                                      "${money_input_field}",
                                      "AMOUNT",
                                      "${key}"
                                    ],
                                    "doc": "Replaces ``search_for`` in the given ``string`` with ``replace_with``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.271",
                                      "@endtime": "20240814 11:51:51.271"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${balance_field}",
                                      "${value}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.271",
                                      "@endtime": "20240814 11:51:51.271"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.269",
                                  "@endtime": "20240814 11:51:51.271"
                                }
                              },
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:51.269",
                                "@endtime": "20240814 11:51:51.271"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:51.268",
                              "@endtime": "20240814 11:51:51.272"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.268",
                            "@endtime": "20240814 11:51:51.272"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${opening_session_present}",
                            "kw": [
                              {
                                "@name": "Clear Element Text",
                                "@library": "SeleniumLibrary",
                                "arg": "${opening_balance}",
                                "doc": "Clears the value of the text-input-element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.530",
                                  "@endtime": "20240814 11:51:51.531"
                                }
                              },
                              {
                                "@name": "Convert Items To List",
                                "@library": "utilities",
                                "var": "${items_list}",
                                "arg": "${my_dict.opening_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.531",
                                  "@endtime": "20240814 11:51:51.531"
                                }
                              },
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.opening_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.531",
                                  "@endtime": "20240814 11:51:51.531"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${open_session_submit_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.533",
                                  "@endtime": "20240814 11:51:51.533"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${opening_balance}",
                                  "timeout=10s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.533",
                                  "@endtime": "20240814 11:51:51.533"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.532",
                                      "@endtime": "20240814 11:51:51.532"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${key}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.532",
                                      "@endtime": "20240814 11:51:51.532"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.532",
                                      "@endtime": "20240814 11:51:51.532"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${opening_balance}",
                                      "${key}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.533",
                                      "@endtime": "20240814 11:51:51.533"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.532",
                                  "@endtime": "20240814 11:51:51.533"
                                }
                              },
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:51.531",
                                "@endtime": "20240814 11:51:51.533"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:51.530",
                              "@endtime": "20240814 11:51:51.533"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.530",
                            "@endtime": "20240814 11:51:51.534"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${opening_session_specify_denomination_present}",
                            "kw": [
                              {
                                "@name": "Convert Items To List",
                                "@library": "utilities",
                                "var": "${items_list}",
                                "arg": "${my_dict.opening_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.735",
                                  "@endtime": "20240814 11:51:51.735"
                                }
                              },
                              {
                                "@name": "Convert Item List To Dictionary",
                                "@library": "utilities",
                                "var": "${items_dict}",
                                "arg": "${my_dict.opening_balance}",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.735",
                                  "@endtime": "20240814 11:51:51.735"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${open_session_submit_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.738",
                                  "@endtime": "20240814 11:51:51.738"
                                }
                              },
                              {
                                "@name": "Wait Until Element Is Not Visible",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${opening_balance}",
                                  "timeout=10s"
                                ],
                                "doc": "Waits until the element ``locator`` is not visible.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.738",
                                  "@endtime": "20240814 11:51:51.738"
                                }
                              }
                            ],
                            "for": {
                              "@flavor": "IN",
                              "var": "${item}",
                              "value": "@{items_dict.items()}",
                              "iter": {
                                "var": {
                                  "@name": "${item}"
                                },
                                "kw": [
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${key_int}",
                                    "arg": "${item}[0]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.737",
                                      "@endtime": "20240814 11:51:51.737"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${key}",
                                    "arg": "${key_int}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.737",
                                      "@endtime": "20240814 11:51:51.737"
                                    }
                                  },
                                  {
                                    "@name": "Set Variable",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${item}[1]",
                                    "doc": "Returns the given values which can then be assigned to a variables.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.737",
                                      "@endtime": "20240814 11:51:51.737"
                                    }
                                  },
                                  {
                                    "@name": "Convert To String",
                                    "@library": "BuiltIn",
                                    "var": "${value}",
                                    "arg": "${values}",
                                    "doc": "Converts the given item to a Unicode string.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.737",
                                      "@endtime": "20240814 11:51:51.737"
                                    }
                                  },
                                  {
                                    "@name": "Replace String",
                                    "@library": "String",
                                    "var": "${balance_field}",
                                    "arg": [
                                      "${money_input_field}",
                                      "AMOUNT",
                                      "${key}"
                                    ],
                                    "doc": "Replaces ``search_for`` in the given ``string`` with ``replace_with``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.737",
                                      "@endtime": "20240814 11:51:51.737"
                                    }
                                  },
                                  {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${balance_field}",
                                      "${value}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:51.738",
                                      "@endtime": "20240814 11:51:51.738"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:51.737",
                                  "@endtime": "20240814 11:51:51.738"
                                }
                              },
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:51.735",
                                "@endtime": "20240814 11:51:51.738"
                              }
                            },
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:51:51.735",
                              "@endtime": "20240814 11:51:51.738"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.735",
                            "@endtime": "20240814 11:51:51.738"
                          }
                        }
                      ],
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:50.226",
                        "@endtime": "20240814 11:51:51.738"
                      }
                    },
                    {
                      "@name": "Add Weighted UOM Products to Cart | Edit Cart Quantity Mode",
                      "@library": "add_to_cart_keyword",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{products}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:51.742",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_02', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.741",
                            "@endtime": "20240814 11:51:51.742"
                          }
                        },
                        {
                          "@name": "Log",
                          "@library": "BuiltIn",
                          "arg": "${my_dict.buy_items}",
                          "doc": "Logs the given message with the given level.",
                          "msg": {
                            "@timestamp": "20240814 11:51:51.758",
                            "@level": "INFO",
                            "#text": "Alexa67 : 1"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.742",
                            "@endtime": "20240814 11:51:51.758"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${scan_only}",
                            "timeout=20s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.758",
                            "@endtime": "20240814 11:51:51.813"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${clear_item_enabled}",
                          "arg": [
                            "Element Should Be Enabled",
                            "${clear_all_items}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Enabled",
                            "@library": "SeleniumLibrary",
                            "arg": "${clear_all_items}",
                            "doc": "Verifies that element identified by ``locator`` is enabled.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:51:52.047",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-14.png\"><img src=\"selenium-screenshot-14.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:51:52.047",
                                "@level": "FAIL",
                                "#text": "Element with locator '(//button[@class='btn mr-1 btn-danger btn-block'])[2]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:51:51.813",
                              "@endtime": "20240814 11:51:52.053"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:51:52.053",
                            "@level": "INFO",
                            "#text": "${clear_item_enabled} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:51.813",
                            "@endtime": "20240814 11:51:52.053"
                          }
                        },
                        {
                          "@name": "Convert Items To List",
                          "@library": "utilities",
                          "var": "${items_list}",
                          "arg": "${my_dict.buy_items}",
                          "msg": {
                            "@timestamp": "20240814 11:51:52.069",
                            "@level": "INFO",
                            "#text": "${items_list} = ['Alexa67 : 1']"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:52.055",
                            "@endtime": "20240814 11:51:52.069"
                          }
                        },
                        {
                          "@name": "Convert Item List To Dictionary",
                          "@library": "utilities",
                          "var": "${items_dict}",
                          "arg": "${my_dict.buy_items}",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:52.084",
                              "@level": "INFO",
                              "#text": "Current item: Alexa67 : 1\nSplit result: ['Alexa67', '1']"
                            },
                            {
                              "@timestamp": "20240814 11:51:52.084",
                              "@level": "INFO",
                              "#text": "${items_dict} = {'Alexa67': 1}"
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:52.070",
                            "@endtime": "20240814 11:51:52.084"
                          }
                        }
                      ],
                      "if": {
                        "branch": {
                          "@type": "IF",
                          "@condition": "${clear_item_enabled}",
                          "kw": [
                            {
                              "@name": "Click Element",
                              "@library": "SeleniumLibrary",
                              "arg": "${clear_all_items}",
                              "doc": "Click the element identified by ``locator``.",
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:52.053",
                                "@endtime": "20240814 11:51:52.053"
                              }
                            },
                            {
                              "@name": "Wait Until Element Is Not Visible",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${first_item_product_name}",
                                "timeout=20s"
                              ],
                              "doc": "Waits until the element ``locator`` is not visible.",
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:52.054",
                                "@endtime": "20240814 11:51:52.055"
                              }
                            },
                            {
                              "@name": "Wait Until Page Contains Element",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${cart_0}",
                                "timeout=20s"
                              ],
                              "doc": "Waits until the element ``locator`` appears on the current page.",
                              "status": {
                                "@status": "NOT RUN",
                                "@starttime": "20240814 11:51:52.055",
                                "@endtime": "20240814 11:51:52.055"
                              }
                            }
                          ],
                          "status": {
                            "@status": "NOT RUN",
                            "@starttime": "20240814 11:51:52.053",
                            "@endtime": "20240814 11:51:52.055"
                          }
                        },
                        "status": {
                          "@status": "PASS",
                          "@starttime": "20240814 11:51:52.053",
                          "@endtime": "20240814 11:51:52.055"
                        }
                      },
                      "for": {
                        "@flavor": "IN",
                        "var": "${item}",
                        "value": "@{items_dict.items()}",
                        "iter": {
                          "var": {
                            "@name": "${item}",
                            "#text": "('Alexa67', 1)"
                          },
                          "kw": [
                            {
                              "@name": "Set Variable",
                              "@library": "BuiltIn",
                              "var": "${key}",
                              "arg": "${item}[0]",
                              "doc": "Returns the given values which can then be assigned to a variables.",
                              "msg": {
                                "@timestamp": "20240814 11:51:52.103",
                                "@level": "INFO",
                                "#text": "${key} = Alexa67"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:52.102",
                                "@endtime": "20240814 11:51:52.103"
                              }
                            },
                            {
                              "@name": "Set Variable",
                              "@library": "BuiltIn",
                              "var": "${values}",
                              "arg": "${item}[1]",
                              "doc": "Returns the given values which can then be assigned to a variables.",
                              "msg": {
                                "@timestamp": "20240814 11:51:52.104",
                                "@level": "INFO",
                                "#text": "${values} = 1"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:52.103",
                                "@endtime": "20240814 11:51:52.105"
                              }
                            },
                            {
                              "@name": "Convert To String",
                              "@library": "BuiltIn",
                              "var": "${value}",
                              "arg": "${values}",
                              "doc": "Converts the given item to a Unicode string.",
                              "msg": {
                                "@timestamp": "20240814 11:51:52.105",
                                "@level": "INFO",
                                "#text": "${value} = 1"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:52.105",
                                "@endtime": "20240814 11:51:52.105"
                              }
                            },
                            {
                              "@name": "Click Element",
                              "@library": "SeleniumLibrary",
                              "arg": "${product_search_bar}",
                              "doc": "Click the element identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:52.106",
                                "@level": "INFO",
                                "#text": "Clicking element '//input[@id=\"product-search\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:52.106",
                                "@endtime": "20240814 11:51:52.249"
                              }
                            },
                            {
                              "@name": "Input Text",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${product_search_bar}",
                                "${key}"
                              ],
                              "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:52.250",
                                "@level": "INFO",
                                "#text": "Typing text 'Alexa67' into text field '//input[@id=\"product-search\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:52.250",
                                "@endtime": "20240814 11:51:52.503"
                              }
                            },
                            {
                              "@name": "Wait Until Element Is Enabled",
                              "@library": "SeleniumLibrary",
                              "arg": [
                                "${search_add_button}",
                                "timeout=20s"
                              ],
                              "doc": "Waits until the element ``locator`` is enabled.",
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:52.504",
                                "@endtime": "20240814 11:51:52.807"
                              }
                            },
                            {
                              "@name": "Sleep",
                              "@library": "BuiltIn",
                              "arg": "0.5s",
                              "doc": "Pauses the test executed for the given time.",
                              "msg": {
                                "@timestamp": "20240814 11:51:53.309",
                                "@level": "INFO",
                                "#text": "Slept 500 milliseconds"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:52.808",
                                "@endtime": "20240814 11:51:53.309"
                              }
                            },
                            {
                              "@name": "Click Element",
                              "@library": "SeleniumLibrary",
                              "arg": "${search_add_button}",
                              "doc": "Click the element identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:53.310",
                                "@level": "INFO",
                                "#text": "Clicking element '//button[@class=\"btn alternative add-to-cart btn-info\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:53.309",
                                "@endtime": "20240814 11:51:53.397"
                              }
                            },
                            {
                              "@name": "Sleep",
                              "@library": "BuiltIn",
                              "arg": "2s",
                              "doc": "Pauses the test executed for the given time.",
                              "msg": {
                                "@timestamp": "20240814 11:51:55.399",
                                "@level": "INFO",
                                "#text": "Slept 2 seconds"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:53.397",
                                "@endtime": "20240814 11:51:55.399"
                              }
                            },
                            {
                              "@name": "Run Keyword And Return Status",
                              "@library": "BuiltIn",
                              "var": "${multiple_product_present}",
                              "arg": [
                                "Element Should Be Visible",
                                "${select_mrp}"
                              ],
                              "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                              "kw": {
                                "@name": "Element Should Be Visible",
                                "@library": "SeleniumLibrary",
                                "arg": "${select_mrp}",
                                "doc": "Verifies that the element identified by ``locator`` is visible.",
                                "msg": {
                                  "@timestamp": "20240814 11:51:55.453",
                                  "@level": "INFO",
                                  "#text": "Element '//h5[@class='modal-title' and contains(text(),'Select MRP')]' is displayed."
                                },
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:55.400",
                                  "@endtime": "20240814 11:51:55.453"
                                }
                              },
                              "msg": {
                                "@timestamp": "20240814 11:51:55.454",
                                "@level": "INFO",
                                "#text": "${multiple_product_present} = True"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:55.399",
                                "@endtime": "20240814 11:51:55.454"
                              }
                            },
                            {
                              "@name": "Sleep",
                              "@library": "BuiltIn",
                              "arg": "1s",
                              "doc": "Pauses the test executed for the given time.",
                              "msg": {
                                "@timestamp": "20240814 11:51:56.872",
                                "@level": "INFO",
                                "#text": "Slept 1 second"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:55.871",
                                "@endtime": "20240814 11:51:56.872"
                              }
                            },
                            {
                              "@name": "Run Keyword And Return Status",
                              "@library": "BuiltIn",
                              "var": "${edit_toggle_enabled}",
                              "arg": [
                                "Element Should Be Visible",
                                "${edit_toggle_on}"
                              ],
                              "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                              "kw": {
                                "@name": "Element Should Be Visible",
                                "@library": "SeleniumLibrary",
                                "arg": "${edit_toggle_on}",
                                "doc": "Verifies that the element identified by ``locator`` is visible.",
                                "msg": [
                                  {
                                    "@timestamp": "20240814 11:51:57.090",
                                    "@level": "INFO",
                                    "@html": "true",
                                    "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-15.png\"><img src=\"selenium-screenshot-15.png\" width=\"800px\"></a>"
                                  },
                                  {
                                    "@timestamp": "20240814 11:51:57.090",
                                    "@level": "FAIL",
                                    "#text": "Element with locator '//div[@class=\"modal-body\"]//label[@class=\"my-auto vue-js-switch toggled\"]' not found."
                                  }
                                ],
                                "status": {
                                  "@status": "FAIL",
                                  "@starttime": "20240814 11:51:56.873",
                                  "@endtime": "20240814 11:51:57.092"
                                }
                              },
                              "msg": {
                                "@timestamp": "20240814 11:51:57.092",
                                "@level": "INFO",
                                "#text": "${edit_toggle_enabled} = False"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:56.872",
                                "@endtime": "20240814 11:51:57.092"
                              }
                            },
                            {
                              "@name": "Click Element",
                              "@library": "SeleniumLibrary",
                              "arg": "${update_cart_quantity}",
                              "doc": "Click the element identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:57.341",
                                "@level": "INFO",
                                "#text": "Clicking element '//div[@class=\"modal-content\"]//button[@class=\"btn btn-primary btn-block\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:57.340",
                                "@endtime": "20240814 11:51:57.522"
                              }
                            }
                          ],
                          "if": [
                            {
                              "branch": {
                                "@type": "IF",
                                "@condition": "${multiple_product_present}",
                                "kw": [
                                  {
                                    "@name": "Wait Until Page Contains Element",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${select_mrp}",
                                      "timeout=10s"
                                    ],
                                    "doc": "Waits until the element ``locator`` appears on the current page.",
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:55.454",
                                      "@endtime": "20240814 11:51:55.479"
                                    }
                                  },
                                  {
                                    "@name": "Click Element",
                                    "@library": "SeleniumLibrary",
                                    "arg": "${add_to_cart_mrp}",
                                    "doc": "Click the element identified by ``locator``.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:55.480",
                                      "@level": "INFO",
                                      "#text": "Clicking element '//button[@id='multiple-mrp-add-to-cart' and @class='btn m-0 custom-btn btn-secondary']'."
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:55.480",
                                      "@endtime": "20240814 11:51:55.625"
                                    }
                                  },
                                  {
                                    "@name": "Wait Until Page Does Not Contain Element",
                                    "@library": "SeleniumLibrary",
                                    "arg": "${select_mrp}",
                                    "doc": "Waits until the element ``locator`` disappears from the current page.",
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:55.626",
                                      "@endtime": "20240814 11:51:55.870"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:55.454",
                                  "@endtime": "20240814 11:51:55.871"
                                }
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:55.454",
                                "@endtime": "20240814 11:51:55.871"
                              }
                            },
                            {
                              "branch": [
                                {
                                  "@type": "IF",
                                  "@condition": "${edit_toggle_enabled}",
                                  "kw": {
                                    "@name": "Input Text",
                                    "@library": "SeleniumLibrary",
                                    "arg": [
                                      "${quantity_input}",
                                      "${value}"
                                    ],
                                    "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                    "status": {
                                      "@status": "NOT RUN",
                                      "@starttime": "20240814 11:51:57.093",
                                      "@endtime": "20240814 11:51:57.093"
                                    }
                                  },
                                  "status": {
                                    "@status": "NOT RUN",
                                    "@starttime": "20240814 11:51:57.093",
                                    "@endtime": "20240814 11:51:57.093"
                                  }
                                },
                                {
                                  "@type": "ELSE",
                                  "kw": [
                                    {
                                      "@name": "Click Element",
                                      "@library": "SeleniumLibrary",
                                      "arg": "${add_toggle_button}",
                                      "doc": "Click the element identified by ``locator``.",
                                      "msg": {
                                        "@timestamp": "20240814 11:51:57.096",
                                        "@level": "INFO",
                                        "#text": "Clicking element '//div[@class=\"modal-body\"]//label[@class=\"my-auto vue-js-switch\"]'."
                                      },
                                      "status": {
                                        "@status": "PASS",
                                        "@starttime": "20240814 11:51:57.095",
                                        "@endtime": "20240814 11:51:57.179"
                                      }
                                    },
                                    {
                                      "@name": "Input Text",
                                      "@library": "SeleniumLibrary",
                                      "arg": [
                                        "${quantity_input}",
                                        "${value}"
                                      ],
                                      "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                      "msg": {
                                        "@timestamp": "20240814 11:51:57.181",
                                        "@level": "INFO",
                                        "#text": "Typing text '1' into text field '//input[@id=\"qtyInput\"]'."
                                      },
                                      "status": {
                                        "@status": "PASS",
                                        "@starttime": "20240814 11:51:57.179",
                                        "@endtime": "20240814 11:51:57.340"
                                      }
                                    }
                                  ],
                                  "status": {
                                    "@status": "PASS",
                                    "@starttime": "20240814 11:51:57.093",
                                    "@endtime": "20240814 11:51:57.340"
                                  }
                                }
                              ],
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:57.092",
                                "@endtime": "20240814 11:51:57.340"
                              }
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:52.102",
                            "@endtime": "20240814 11:51:57.522"
                          }
                        },
                        "status": {
                          "@status": "PASS",
                          "@starttime": "20240814 11:51:52.085",
                          "@endtime": "20240814 11:51:57.522"
                        }
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:51.741",
                        "@endtime": "20240814 11:51:57.522"
                      }
                    },
                    {
                      "@name": "Verify Item Is Added",
                      "@library": "add_to_cart_keyword",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${my_dict}",
                          "arg": "&{products}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:51:57.523",
                            "@level": "INFO",
                            "#text": "${my_dict} = {'TC_Id': 'TC_02', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:57.523",
                            "@endtime": "20240814 11:51:57.523"
                          }
                        },
                        {
                          "@name": "Convert Items To List",
                          "@library": "utilities",
                          "var": "${items_list}",
                          "arg": "${my_dict.buy_items}",
                          "msg": {
                            "@timestamp": "20240814 11:51:57.535",
                            "@level": "INFO",
                            "#text": "${items_list} = ['Alexa67 : 1']"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:57.523",
                            "@endtime": "20240814 11:51:57.535"
                          }
                        },
                        {
                          "@name": "Convert Item List To Dictionary",
                          "@library": "utilities",
                          "var": "${items_dict}",
                          "arg": "${my_dict.buy_items}",
                          "msg": [
                            {
                              "@timestamp": "20240814 11:51:57.545",
                              "@level": "INFO",
                              "#text": "Current item: Alexa67 : 1\nSplit result: ['Alexa67', '1']"
                            },
                            {
                              "@timestamp": "20240814 11:51:57.546",
                              "@level": "INFO",
                              "#text": "${items_dict} = {'Alexa67': 1}"
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:57.536",
                            "@endtime": "20240814 11:51:57.546"
                          }
                        },
                        {
                          "@name": "Sleep",
                          "@library": "BuiltIn",
                          "arg": "2",
                          "doc": "Pauses the test executed for the given time.",
                          "msg": {
                            "@timestamp": "20240814 11:51:59.546",
                            "@level": "INFO",
                            "#text": "Slept 2 seconds"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:57.546",
                            "@endtime": "20240814 11:51:59.546"
                          }
                        },
                        {
                          "@name": "Set Variable",
                          "@library": "BuiltIn",
                          "var": "${expected_cart_quantity}",
                          "arg": "0",
                          "doc": "Returns the given values which can then be assigned to a variables.",
                          "msg": {
                            "@timestamp": "20240814 11:51:59.547",
                            "@level": "INFO",
                            "#text": "${expected_cart_quantity} = 0"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:59.546",
                            "@endtime": "20240814 11:51:59.547"
                          }
                        },
                        {
                          "@name": "Convert To String",
                          "@library": "BuiltIn",
                          "var": "${expected_cart_quantity}",
                          "arg": "${expected_cart_quantity}",
                          "doc": "Converts the given item to a Unicode string.",
                          "msg": {
                            "@timestamp": "20240814 11:51:59.633",
                            "@level": "INFO",
                            "#text": "${expected_cart_quantity} = 1"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:59.633",
                            "@endtime": "20240814 11:51:59.633"
                          }
                        },
                        {
                          "@name": "Sleep",
                          "@library": "BuiltIn",
                          "arg": "1s",
                          "doc": "Pauses the test executed for the given time.",
                          "msg": {
                            "@timestamp": "20240814 11:52:00.634",
                            "@level": "INFO",
                            "#text": "Slept 1 second"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:59.633",
                            "@endtime": "20240814 11:52:00.634"
                          }
                        },
                        {
                          "@name": "Get Text",
                          "@library": "SeleniumLibrary",
                          "var": "${items_cart_quantity}",
                          "arg": "${cart_quantity}",
                          "doc": "Returns the text value of the element identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:52:00.673",
                            "@level": "INFO",
                            "#text": "${items_cart_quantity} = (1)"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:00.634",
                            "@endtime": "20240814 11:52:00.673"
                          }
                        },
                        {
                          "@name": "Remove Characters",
                          "@library": "utilities",
                          "var": "${items_cart_quantity}",
                          "arg": "${items_cart_quantity}",
                          "msg": {
                            "@timestamp": "20240814 11:52:00.673",
                            "@level": "INFO",
                            "#text": "${items_cart_quantity} = 1"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:00.673",
                            "@endtime": "20240814 11:52:00.673"
                          }
                        },
                        {
                          "@name": "Should Be Equal As Strings",
                          "@library": "BuiltIn",
                          "arg": [
                            "${expected_cart_quantity}",
                            "${items_cart_quantity}"
                          ],
                          "doc": "Fails if objects are unequal after converting them to strings.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:00.673",
                            "@endtime": "20240814 11:52:00.674"
                          }
                        }
                      ],
                      "for": {
                        "@flavor": "IN",
                        "var": "${item}",
                        "value": "@{items_dict.items()}",
                        "iter": {
                          "var": {
                            "@name": "${item}",
                            "#text": "('Alexa67', 1)"
                          },
                          "kw": [
                            {
                              "@name": "Set Variable",
                              "@library": "BuiltIn",
                              "var": "${key}",
                              "arg": "${item}[0]",
                              "doc": "Returns the given values which can then be assigned to a variables.",
                              "msg": {
                                "@timestamp": "20240814 11:51:59.564",
                                "@level": "INFO",
                                "#text": "${key} = Alexa67"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:59.564",
                                "@endtime": "20240814 11:51:59.564"
                              }
                            },
                            {
                              "@name": "Set Variable",
                              "@library": "BuiltIn",
                              "var": "${values}",
                              "arg": "${item}[1]",
                              "doc": "Returns the given values which can then be assigned to a variables.",
                              "msg": {
                                "@timestamp": "20240814 11:51:59.566",
                                "@level": "INFO",
                                "#text": "${values} = 1"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:59.566",
                                "@endtime": "20240814 11:51:59.566"
                              }
                            },
                            {
                              "@name": "Convert To String",
                              "@library": "BuiltIn",
                              "var": "${value}",
                              "arg": "${values}",
                              "doc": "Converts the given item to a Unicode string.",
                              "msg": {
                                "@timestamp": "20240814 11:51:59.567",
                                "@level": "INFO",
                                "#text": "${value} = 1"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:59.566",
                                "@endtime": "20240814 11:51:59.567"
                              }
                            },
                            {
                              "@name": "Run Keyword And Return Status",
                              "@library": "BuiltIn",
                              "var": "${quantity_in_piece}",
                              "arg": [
                                "Page Should Contain Element",
                                "${quantity_in_piece_button}"
                              ],
                              "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                              "kw": {
                                "@name": "Page Should Contain Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${quantity_in_piece_button}",
                                "doc": "Verifies that element ``locator`` is found on the current page.",
                                "msg": {
                                  "@timestamp": "20240814 11:51:59.594",
                                  "@level": "INFO",
                                  "#text": "Current page contains element '(//td[@aria-colindex=\"3\"]//button[@id=\"weight-btn-null\"])[1]'."
                                },
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:59.567",
                                  "@endtime": "20240814 11:51:59.594"
                                }
                              },
                              "msg": {
                                "@timestamp": "20240814 11:51:59.594",
                                "@level": "INFO",
                                "#text": "${quantity_in_piece} = True"
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:59.567",
                                "@endtime": "20240814 11:51:59.594"
                              }
                            },
                            {
                              "@name": "Page Should Contain",
                              "@library": "SeleniumLibrary",
                              "arg": "${key}",
                              "doc": "Verifies that current page contains ``text``.",
                              "msg": {
                                "@timestamp": "20240814 11:51:59.632",
                                "@level": "INFO",
                                "#text": "Current page contains text 'Alexa67'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:51:59.597",
                                "@endtime": "20240814 11:51:59.633"
                              }
                            }
                          ],
                          "if": {
                            "branch": [
                              {
                                "@type": "IF",
                                "@condition": "${quantity_in_piece}",
                                "kw": [
                                  {
                                    "@name": "Convert To Number",
                                    "@library": "BuiltIn",
                                    "var": "${values}",
                                    "arg": "${values}",
                                    "doc": "Converts the given item to a floating point number.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:59.596",
                                      "@level": "INFO",
                                      "#text": "${values} = 1.0"
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:59.596",
                                      "@endtime": "20240814 11:51:59.596"
                                    }
                                  },
                                  {
                                    "@name": "Evaluate",
                                    "@library": "BuiltIn",
                                    "var": "${expected_cart_quantity}",
                                    "arg": "${expected_cart_quantity}+1",
                                    "doc": "Evaluates the given expression in Python and returns the result.",
                                    "msg": {
                                      "@timestamp": "20240814 11:51:59.597",
                                      "@level": "INFO",
                                      "#text": "${expected_cart_quantity} = 1"
                                    },
                                    "status": {
                                      "@status": "PASS",
                                      "@starttime": "20240814 11:51:59.596",
                                      "@endtime": "20240814 11:51:59.597"
                                    }
                                  }
                                ],
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:51:59.595",
                                  "@endtime": "20240814 11:51:59.597"
                                }
                              },
                              {
                                "@type": "ELSE",
                                "kw": {
                                  "@name": "Evaluate",
                                  "@library": "BuiltIn",
                                  "var": "${expected_cart_quantity}",
                                  "arg": "${expected_cart_quantity}+${values}",
                                  "doc": "Evaluates the given expression in Python and returns the result.",
                                  "status": {
                                    "@status": "NOT RUN",
                                    "@starttime": "20240814 11:51:59.597",
                                    "@endtime": "20240814 11:51:59.597"
                                  }
                                },
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:51:59.597",
                                  "@endtime": "20240814 11:51:59.597"
                                }
                              }
                            ],
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:51:59.594",
                              "@endtime": "20240814 11:51:59.597"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:51:59.564",
                            "@endtime": "20240814 11:51:59.633"
                          }
                        },
                        "status": {
                          "@status": "PASS",
                          "@starttime": "20240814 11:51:59.547",
                          "@endtime": "20240814 11:51:59.633"
                        }
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:51:57.522",
                        "@endtime": "20240814 11:52:00.674"
                      }
                    },
                    {
                      "@name": "Revoke Serial Key",
                      "@library": "prerequisite",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Create Dictionary",
                          "@library": "BuiltIn",
                          "var": "${serial_key_info}",
                          "arg": "&{serial_key}",
                          "doc": "Creates and returns a dictionary based on the given ``items``.",
                          "msg": {
                            "@timestamp": "20240814 11:52:00.677",
                            "@level": "INFO",
                            "#text": "${serial_key_info} = {'TC_Id': 'TC_02', 'serial_key': '492260724jMt', 'username_admin': 'admin@sunrise.com', 'password_admin': 123456, 'username_pos': 'B_add_to_cart_user1_p1', 'password_pos': 123456, 'closing_balance': '..."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:00.677",
                            "@endtime": "20240814 11:52:00.677"
                          }
                        },
                        {
                          "@name": "Set Variable",
                          "@library": "BuiltIn",
                          "var": "${serial_key_number}",
                          "arg": "${serial_key_info.serial_key}",
                          "doc": "Returns the given values which can then be assigned to a variables.",
                          "msg": {
                            "@timestamp": "20240814 11:52:00.700",
                            "@level": "INFO",
                            "#text": "${serial_key_number} = 492260724jMt"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:00.678",
                            "@endtime": "20240814 11:52:00.700"
                          }
                        },
                        {
                          "@name": "Go To",
                          "@library": "SeleniumLibrary",
                          "arg": "${${ENV}_URL}",
                          "doc": "Navigates the current browser window to the provided ``url``.",
                          "msg": {
                            "@timestamp": "20240814 11:52:00.700",
                            "@level": "INFO",
                            "#text": "Opening url ' https://staging.app.gozwing.com/'"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:00.700",
                            "@endtime": "20240814 11:52:01.584"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${settings_tab}",
                            "timeout=40s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:01.585",
                            "@endtime": "20240814 11:52:01.636"
                          }
                        },
                        {
                          "@name": "Set Focus To Element",
                          "@library": "SeleniumLibrary",
                          "arg": "${settings_tab}",
                          "doc": "Sets the focus to the element identified by ``locator``.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:01.636",
                            "@endtime": "20240814 11:52:01.675"
                          }
                        },
                        {
                          "@name": "Wait Until Keyword Succeeds",
                          "@library": "BuiltIn",
                          "arg": [
                            "5",
                            "2",
                            "Click Element",
                            "${settings_tab}"
                          ],
                          "doc": "Runs the specified keyword and retries if it fails.",
                          "kw": {
                            "@name": "Click Element",
                            "@library": "SeleniumLibrary",
                            "arg": "${settings_tab}",
                            "doc": "Click the element identified by ``locator``.",
                            "msg": {
                              "@timestamp": "20240814 11:52:01.680",
                              "@level": "INFO",
                              "#text": "Clicking element '//img[@id=\"nav-settings\"]//ancestor::a'."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:52:01.679",
                              "@endtime": "20240814 11:52:01.802"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:01.677",
                            "@endtime": "20240814 11:52:01.802"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${serial_info_visible}",
                          "arg": [
                            "Element Should Be Visible",
                            "${serial_info_heading}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": "${serial_info_heading}",
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:52:02.196",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-16.png\"><img src=\"selenium-screenshot-16.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:52:02.197",
                                "@level": "FAIL",
                                "#text": "Element with locator '//h5[contains(text(),\"Serial Information\")]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:52:01.804",
                              "@endtime": "20240814 11:52:02.200"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:52:02.200",
                            "@level": "INFO",
                            "#text": "${serial_info_visible} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:01.802",
                            "@endtime": "20240814 11:52:02.201"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${closing_balance_visible}",
                          "arg": [
                            "Element Should Be Visible",
                            "${closing_balance}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": "${closing_balance}",
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:52:02.677",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-17.png\"><img src=\"selenium-screenshot-17.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:52:02.678",
                                "@level": "FAIL",
                                "#text": "Element with locator '//div//header//h5[@class=\"modal-title\"and contains(text(),\"Close Session\")]//following::div[@class=\"col-md-12 col-lg-12\"]//input[@class=\"w-100 form-control form-control-lg\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:52:02.488",
                              "@endtime": "20240814 11:52:02.680"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:52:02.681",
                            "@level": "INFO",
                            "#text": "${closing_balance_visible} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:02.487",
                            "@endtime": "20240814 11:52:02.681"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${opening_session_present}",
                          "arg": [
                            "Element Should Be Visible",
                            "${opening_balance}",
                            "timeout=10s"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Element Should Be Visible",
                            "@library": "SeleniumLibrary",
                            "arg": [
                              "${opening_balance}",
                              "timeout=10s"
                            ],
                            "doc": "Verifies that the element identified by ``locator`` is visible.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:52:02.848",
                                "@level": "INFO",
                                "@html": "true",
                                "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-18.png\"><img src=\"selenium-screenshot-18.png\" width=\"800px\"></a>"
                              },
                              {
                                "@timestamp": "20240814 11:52:02.849",
                                "@level": "FAIL",
                                "#text": "Element with locator '//div//header//h5[@class=\"modal-title\"and contains(text(),\"Open Session\")]//following::div[@class=\"col-md-12 col-lg-12\"]//input[@class=\"w-100 form-control form-control-lg\"]' not found."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:52:02.682",
                              "@endtime": "20240814 11:52:02.851"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:52:02.851",
                            "@level": "INFO",
                            "#text": "${opening_session_present} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:02.682",
                            "@endtime": "20240814 11:52:02.851"
                          }
                        },
                        {
                          "@name": "Wait Until Keyword Succeeds",
                          "@library": "BuiltIn",
                          "arg": [
                            "5",
                            "3",
                            "Click Element",
                            "${profile_info_heading}"
                          ],
                          "doc": "Runs the specified keyword and retries if it fails.",
                          "kw": {
                            "@name": "Click Element",
                            "@library": "SeleniumLibrary",
                            "arg": "${profile_info_heading}",
                            "doc": "Click the element identified by ``locator``.",
                            "msg": {
                              "@timestamp": "20240814 11:52:02.855",
                              "@level": "INFO",
                              "#text": "Clicking element '//h5[contains(text(),\"Profile Information\")]'."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:52:02.853",
                              "@endtime": "20240814 11:52:02.934"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:02.853",
                            "@endtime": "20240814 11:52:02.934"
                          }
                        },
                        {
                          "@name": "Wait Until Keyword Succeeds",
                          "@library": "BuiltIn",
                          "arg": [
                            "5",
                            "3",
                            "Click Element",
                            "${serial_information_tab}"
                          ],
                          "doc": "Runs the specified keyword and retries if it fails.",
                          "kw": {
                            "@name": "Click Element",
                            "@library": "SeleniumLibrary",
                            "arg": "${serial_information_tab}",
                            "doc": "Click the element identified by ``locator``.",
                            "msg": {
                              "@timestamp": "20240814 11:52:02.938",
                              "@level": "INFO",
                              "#text": "Clicking element '//a[contains(text(),\"Serial Information\")]'."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:52:02.935",
                              "@endtime": "20240814 11:52:03.065"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:02.935",
                            "@endtime": "20240814 11:52:03.065"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${serial_info_heading}",
                            "timeout=10s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:03.065",
                            "@endtime": "20240814 11:52:03.106"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${revoke_license_button}",
                            "timeout=10s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:03.107",
                            "@endtime": "20240814 11:52:03.154"
                          }
                        },
                        {
                          "@name": "Scroll Element Into View",
                          "@library": "SeleniumLibrary",
                          "arg": "${revoke_license_button}",
                          "doc": "Scrolls the element identified by ``locator`` into view.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:03.154",
                            "@endtime": "20240814 11:52:03.482"
                          }
                        },
                        {
                          "@name": "Wait Until Keyword Succeeds",
                          "@library": "BuiltIn",
                          "arg": [
                            "5",
                            "3",
                            "Click Button",
                            "${revoke_license_button}"
                          ],
                          "doc": "Runs the specified keyword and retries if it fails.",
                          "kw": [
                            {
                              "@name": "Click Button",
                              "@library": "SeleniumLibrary",
                              "arg": "${revoke_license_button}",
                              "doc": "Clicks the button identified by ``locator``.",
                              "msg": [
                                {
                                  "@timestamp": "20240814 11:52:03.484",
                                  "@level": "INFO",
                                  "#text": "Clicking button '//button[@id=\"revoke-lic-btn\" and text()=\"Revoke License\"]'."
                                },
                                {
                                  "@timestamp": "20240814 11:52:04.821",
                                  "@level": "INFO",
                                  "@html": "true",
                                  "#text": "</td></tr><tr><td colspan=\"3\"><a href=\"selenium-screenshot-19.png\"><img src=\"selenium-screenshot-19.png\" width=\"800px\"></a>"
                                },
                                {
                                  "@timestamp": "20240814 11:52:04.823",
                                  "@level": "FAIL",
                                  "#text": "ElementClickInterceptedException: Message: element click intercepted: Element <button data-v-04b40170=\"\" id=\"revoke-lic-btn\" type=\"button\" class=\"btn mt-3 btn-danger\">...</button> is not clickable at point (435, 327). Other element would receive the click: <p data-v-04b40170=\"\" class=\"card-text license\">...</p>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7321F9642+30946]\n\t(No symbol) [0x00007FF7321AE3D9]\n\t(No symbol) [0x00007FF7320A6FDA]\n\t(No symbol) [0x00007FF7320FFEEE]\n\t(No symbol) [0x00007FF7320FD962]\n\t(No symbol) [0x00007FF7320FAE7B]\n\t(No symbol) [0x00007FF7320FA095]\n\t(No symbol) [0x00007FF7320EC271]\n\t(No symbol) [0x00007FF73211CA6A]\n\t(No symbol) [0x00007FF7320EBBB6]\n\t(No symbol) [0x00007FF73211CC80]\n\t(No symbol) [0x00007FF73213B041]\n\t(No symbol) [0x00007FF73211C813]\n\t(No symbol) [0x00007FF7320EA6E5]\n\t(No symbol) [0x00007FF7320EB021]\n\tGetHandleVerifier [0x00007FF73232F84D+1301229]\n\tGetHandleVerifier [0x00007FF73233BDC7+1351783]\n\tGetHandleVerifier [0x00007FF732332A13+1313971]\n\tGetHandleVerifier [0x00007FF73222DD16+245686]\n\t(No symbol) [0x00007FF7321B759F]\n\t(No symbol) [0x00007FF7321B3814]\n\t(No symbol) [0x00007FF7321B39A2]\n\t(No symbol) [0x00007FF7321AA3FF]\n\tBaseThreadInitThunk [0x00007FF9F7AE257D+29]\n\tRtlUserThreadStart [0x00007FF9F980AF28+40]"
                                }
                              ],
                              "status": {
                                "@status": "FAIL",
                                "@starttime": "20240814 11:52:03.483",
                                "@endtime": "20240814 11:52:04.856"
                              }
                            },
                            {
                              "@name": "Click Button",
                              "@library": "SeleniumLibrary",
                              "arg": "${revoke_license_button}",
                              "doc": "Clicks the button identified by ``locator``.",
                              "msg": {
                                "@timestamp": "20240814 11:52:07.858",
                                "@level": "INFO",
                                "#text": "Clicking button '//button[@id=\"revoke-lic-btn\" and text()=\"Revoke License\"]'."
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:52:07.856",
                                "@endtime": "20240814 11:52:07.955"
                              }
                            }
                          ],
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:03.483",
                            "@endtime": "20240814 11:52:07.955"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${revoke_modal_title}",
                            "timeout=10s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:07.955",
                            "@endtime": "20240814 11:52:08.239"
                          }
                        },
                        {
                          "@name": "Wait Until Page Contains Element",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${license_key_input}",
                            "timeout=10s"
                          ],
                          "doc": "Waits until the element ``locator`` appears on the current page.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:08.239",
                            "@endtime": "20240814 11:52:08.259"
                          }
                        },
                        {
                          "@name": "Sleep",
                          "@library": "BuiltIn",
                          "arg": "0.5",
                          "doc": "Pauses the test executed for the given time.",
                          "msg": {
                            "@timestamp": "20240814 11:52:08.761",
                            "@level": "INFO",
                            "#text": "Slept 500 milliseconds"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:08.259",
                            "@endtime": "20240814 11:52:08.761"
                          }
                        },
                        {
                          "@name": "Input Text",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${license_key_input}",
                            "${serial_key_number}"
                          ],
                          "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                          "msg": {
                            "@timestamp": "20240814 11:52:08.762",
                            "@level": "INFO",
                            "#text": "Typing text '492260724jMt' into text field '//input[@id=\"enter-lic\"]'."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:08.761",
                            "@endtime": "20240814 11:52:09.180"
                          }
                        },
                        {
                          "@name": "Wait Until Page Contains Element",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${license_key_input}",
                            "timeout=20s"
                          ],
                          "doc": "Waits until the element ``locator`` appears on the current page.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:09.180",
                            "@endtime": "20240814 11:52:09.199"
                          }
                        },
                        {
                          "@name": "Wait Until Keyword Succeeds",
                          "@library": "BuiltIn",
                          "arg": [
                            "5",
                            "4",
                            "Click Button",
                            "${revoke_license_confirm_button}"
                          ],
                          "doc": "Runs the specified keyword and retries if it fails.",
                          "kw": {
                            "@name": "Click Button",
                            "@library": "SeleniumLibrary",
                            "arg": "${revoke_license_confirm_button}",
                            "doc": "Clicks the button identified by ``locator``.",
                            "msg": {
                              "@timestamp": "20240814 11:52:09.201",
                              "@level": "INFO",
                              "#text": "Clicking button '//button[@id=\"revoke-lic-confirm\"]'."
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:52:09.200",
                              "@endtime": "20240814 11:52:09.351"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:09.200",
                            "@endtime": "20240814 11:52:09.351"
                          }
                        },
                        {
                          "@name": "Wait Until Page Does Not Contain Element",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${revoke_license_confirm_button}",
                            "timeout=10s"
                          ],
                          "doc": "Waits until the element ``locator`` disappears from the current page.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:09.351",
                            "@endtime": "20240814 11:52:10.041"
                          }
                        },
                        {
                          "@name": "Wait Until Element Is Visible",
                          "@library": "SeleniumLibrary",
                          "arg": [
                            "${activate_device_heading}",
                            "timeout=10s"
                          ],
                          "doc": "Waits until the element ``locator`` is visible.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:10.041",
                            "@endtime": "20240814 11:52:10.740"
                          }
                        },
                        {
                          "@name": "Delete All Cookies",
                          "@library": "SeleniumLibrary",
                          "doc": "Deletes all cookies.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:10.740",
                            "@endtime": "20240814 11:52:10.754"
                          }
                        },
                        {
                          "@name": "Execute Javascript",
                          "@library": "SeleniumLibrary",
                          "arg": "window.localStorage.clear();",
                          "doc": "Executes the given JavaScript code with possible arguments.",
                          "msg": {
                            "@timestamp": "20240814 11:52:10.756",
                            "@level": "INFO",
                            "#text": "Executing JavaScript:\nwindow.localStorage.clear();\nWithout any arguments."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:10.755",
                            "@endtime": "20240814 11:52:10.769"
                          }
                        },
                        {
                          "@name": "Execute Javascript",
                          "@library": "SeleniumLibrary",
                          "arg": "window.sessionStorage.clear();",
                          "doc": "Executes the given JavaScript code with possible arguments.",
                          "msg": {
                            "@timestamp": "20240814 11:52:10.770",
                            "@level": "INFO",
                            "#text": "Executing JavaScript:\nwindow.sessionStorage.clear();\nWithout any arguments."
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:10.769",
                            "@endtime": "20240814 11:52:10.781"
                          }
                        },
                        {
                          "@name": "Reload Page",
                          "@library": "SeleniumLibrary",
                          "doc": "Simulates user reloading page.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:10.782",
                            "@endtime": "20240814 11:52:10.987"
                          }
                        },
                        {
                          "@name": "Close All Browsers",
                          "@library": "SeleniumLibrary",
                          "doc": "Closes all open browsers and resets the browser cache.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:10.987",
                            "@endtime": "20240814 11:52:24.678"
                          }
                        }
                      ],
                      "if": [
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "'${serial_info_visible}' == 'False'",
                            "kw": {
                              "@name": "Wait Until Keyword Succeeds",
                              "@library": "BuiltIn",
                              "arg": [
                                "5",
                                "2",
                                "Click Element",
                                "${settings_tab}"
                              ],
                              "doc": "Runs the specified keyword and retries if it fails.",
                              "kw": {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${settings_tab}",
                                "doc": "Click the element identified by ``locator``.",
                                "msg": {
                                  "@timestamp": "20240814 11:52:02.204",
                                  "@level": "INFO",
                                  "#text": "Clicking element '//img[@id=\"nav-settings\"]//ancestor::a'."
                                },
                                "status": {
                                  "@status": "PASS",
                                  "@starttime": "20240814 11:52:02.202",
                                  "@endtime": "20240814 11:52:02.486"
                                }
                              },
                              "status": {
                                "@status": "PASS",
                                "@starttime": "20240814 11:52:02.202",
                                "@endtime": "20240814 11:52:02.486"
                              }
                            },
                            "status": {
                              "@status": "PASS",
                              "@starttime": "20240814 11:52:02.201",
                              "@endtime": "20240814 11:52:02.486"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:02.201",
                            "@endtime": "20240814 11:52:02.486"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${closing_balance_visible}",
                            "kw": [
                              {
                                "@name": "Input Text",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${closing_balance}",
                                  "${serial_key_info.closing_balance}"
                                ],
                                "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:52:02.681",
                                  "@endtime": "20240814 11:52:02.681"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${open_session_submit_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:52:02.682",
                                  "@endtime": "20240814 11:52:02.682"
                                }
                              }
                            ],
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:52:02.681",
                              "@endtime": "20240814 11:52:02.682"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:02.681",
                            "@endtime": "20240814 11:52:02.682"
                          }
                        },
                        {
                          "branch": {
                            "@type": "IF",
                            "@condition": "${opening_session_present}",
                            "kw": [
                              {
                                "@name": "Wait Until Page Contains Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${opening_balance}",
                                "doc": "Waits until the element ``locator`` appears on the current page.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:52:02.852",
                                  "@endtime": "20240814 11:52:02.852"
                                }
                              },
                              {
                                "@name": "Clear Element Text",
                                "@library": "SeleniumLibrary",
                                "arg": "${opening_balance}",
                                "doc": "Clears the value of the text-input-element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:52:02.852",
                                  "@endtime": "20240814 11:52:02.852"
                                }
                              },
                              {
                                "@name": "Input Text",
                                "@library": "SeleniumLibrary",
                                "arg": [
                                  "${opening_balance}",
                                  "${serial_key_info.opening_balance}"
                                ],
                                "doc": "Types the given ``text`` into the text field identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:52:02.852",
                                  "@endtime": "20240814 11:52:02.852"
                                }
                              },
                              {
                                "@name": "Click Element",
                                "@library": "SeleniumLibrary",
                                "arg": "${open_session_submit_button}",
                                "doc": "Click the element identified by ``locator``.",
                                "status": {
                                  "@status": "NOT RUN",
                                  "@starttime": "20240814 11:52:02.852",
                                  "@endtime": "20240814 11:52:02.852"
                                }
                              }
                            ],
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:52:02.851",
                              "@endtime": "20240814 11:52:02.853"
                            }
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:02.851",
                            "@endtime": "20240814 11:52:02.853"
                          }
                        }
                      ],
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:52:00.676",
                        "@endtime": "20240814 11:52:24.678"
                      }
                    },
                    {
                      "@name": "Tear It Down If Test Case Failed",
                      "@library": "prerequisite",
                      "@type": "TEARDOWN",
                      "arg": "${pos_data}",
                      "kw": [
                        {
                          "@name": "Run Keyword If Test Failed",
                          "@library": "BuiltIn",
                          "arg": [
                            "Revoke The Licence Key From Console",
                            "${discount_data}"
                          ],
                          "doc": "Runs the given keyword with the given arguments, if the test failed.",
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:24.680",
                            "@endtime": "20240814 11:52:24.680"
                          }
                        },
                        {
                          "@name": "Sleep",
                          "@library": "BuiltIn",
                          "arg": "0.2",
                          "doc": "Pauses the test executed for the given time.",
                          "msg": {
                            "@timestamp": "20240814 11:52:24.880",
                            "@level": "INFO",
                            "#text": "Slept 200 milliseconds"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:24.680",
                            "@endtime": "20240814 11:52:24.880"
                          }
                        },
                        {
                          "@name": "Run Keyword And Return Status",
                          "@library": "BuiltIn",
                          "var": "${status}",
                          "arg": [
                            "Page Should Contain Element",
                            "${pos_option_sidebar}"
                          ],
                          "doc": "Runs the given keyword with given arguments and returns the status as a Boolean value.",
                          "kw": {
                            "@name": "Page Should Contain Element",
                            "@library": "SeleniumLibrary",
                            "arg": "${pos_option_sidebar}",
                            "doc": "Verifies that element ``locator`` is found on the current page.",
                            "msg": [
                              {
                                "@timestamp": "20240814 11:52:24.882",
                                "@level": "INFO",
                                "#text": "Cannot capture screenshot because no browser is open."
                              },
                              {
                                "@timestamp": "20240814 11:52:24.882",
                                "@level": "FAIL",
                                "#text": "No browser is open."
                              }
                            ],
                            "status": {
                              "@status": "FAIL",
                              "@starttime": "20240814 11:52:24.881",
                              "@endtime": "20240814 11:52:24.885"
                            }
                          },
                          "msg": {
                            "@timestamp": "20240814 11:52:24.886",
                            "@level": "INFO",
                            "#text": "${status} = False"
                          },
                          "status": {
                            "@status": "PASS",
                            "@starttime": "20240814 11:52:24.881",
                            "@endtime": "20240814 11:52:24.886"
                          }
                        }
                      ],
                      "if": {
                        "branch": {
                          "@type": "IF",
                          "@condition": "${status}",
                          "kw": {
                            "@name": "Close All Browsers",
                            "@library": "SeleniumLibrary",
                            "doc": "Closes all open browsers and resets the browser cache.",
                            "status": {
                              "@status": "NOT RUN",
                              "@starttime": "20240814 11:52:24.886",
                              "@endtime": "20240814 11:52:24.886"
                            }
                          },
                          "status": {
                            "@status": "NOT RUN",
                            "@starttime": "20240814 11:52:24.886",
                            "@endtime": "20240814 11:52:24.886"
                          }
                        },
                        "status": {
                          "@status": "PASS",
                          "@starttime": "20240814 11:52:24.886",
                          "@endtime": "20240814 11:52:24.886"
                        }
                      },
                      "status": {
                        "@status": "PASS",
                        "@starttime": "20240814 11:52:24.679",
                        "@endtime": "20240814 11:52:24.886"
                      }
                    }
                  ],
                  "tag": "retry",
                  "status": {
                    "@status": "PASS",
                    "@starttime": "20240814 11:51:36.309",
                    "@endtime": "20240814 11:52:24.887"
                  }
                }
              ],
              "status": {
                "@status": "FAIL",
                "@starttime": "20240814 11:50:36.719",
                "@endtime": "20240814 11:52:24.906"
              }
            },
            "status": {
              "@status": "FAIL",
              "@starttime": "20240814 11:50:36.717",
              "@endtime": "20240814 11:52:24.913"
            }
          },
          "status": {
            "@status": "FAIL",
            "@starttime": "20240814 11:50:36.716",
            "@endtime": "20240814 11:52:24.916"
          }
        },
        "status": {
          "@status": "FAIL",
          "@starttime": "20240814 11:50:36.713",
          "@endtime": "20240814 11:52:24.917"
        }
      },
      "status": {
        "@status": "FAIL",
        "@starttime": "20240814 11:50:36.638",
        "@endtime": "20240814 11:52:24.922"
      }
    },
    "statistics": {
      "total": {
        "stat": {
          "@pass": "1",
          "@fail": "1",
          "@skip": "0",
          "#text": "All Tests"
        }
      },
      "tag": {
        "stat": {
          "@pass": "1",
          "@fail": "0",
          "@skip": "0",
          "#text": "retry"
        }
      },
      "suite": {
        "stat": [
          {
            "@pass": "1",
            "@fail": "1",
            "@skip": "0",
            "@id": "s1",
            "@name": "Zwing-Qa-Automation",
            "#text": "Zwing-Qa-Automation"
          },
          {
            "@pass": "1",
            "@fail": "1",
            "@skip": "0",
            "@id": "s1-s1",
            "@name": "TestCases",
            "#text": "Zwing-Qa-Automation.TestCases"
          },
          {
            "@pass": "1",
            "@fail": "1",
            "@skip": "0",
            "@id": "s1-s1-s1",
            "@name": "Web POS",
            "#text": "Zwing-Qa-Automation.TestCases.Web POS"
          },
          {
            "@pass": "1",
            "@fail": "1",
            "@skip": "0",
            "@id": "s1-s1-s1-s1",
            "@name": "Billing",
            "#text": "Zwing-Qa-Automation.TestCases.Web POS.Billing"
          },
          {
            "@pass": "1",
            "@fail": "1",
            "@skip": "0",
            "@id": "s1-s1-s1-s1-s1",
            "@name": "Add To Cart Test Cases",
            "#text": "Zwing-Qa-Automation.TestCases.Web POS.Billing.Add To Cart Test Cases"
          }
        ]
      }
    },
    "errors": {
      "msg": [
        {
          "@timestamp": "20240814 11:51:31.853",
          "@level": "WARN",
          "#text": "Retrying (RetryAdapter(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B645861E0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /revoke-licence"
        },
        {
          "@timestamp": "20240814 11:51:32.056",
          "@level": "WARN",
          "#text": "Retrying (RetryAdapter(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B645857C0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /revoke-licence"
        },
        {
          "@timestamp": "20240814 11:51:32.459",
          "@level": "WARN",
          "#text": "Retrying (RetryAdapter(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B75182330>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /revoke-licence"
        },
        {
          "@timestamp": "20240814 11:51:34.917",
          "@level": "WARN",
          "#text": "Retrying (RetryAdapter(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519F5F0>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /vendor/logout"
        },
        {
          "@timestamp": "20240814 11:51:35.160",
          "@level": "WARN",
          "#text": "Retrying (RetryAdapter(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519F890>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /vendor/logout"
        },
        {
          "@timestamp": "20240814 11:51:35.564",
          "@level": "WARN",
          "#text": "Retrying (RetryAdapter(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000022B7519FB00>: Failed to resolve 'app.api.gozwing.com' ([Errno 11001] getaddrinfo failed)\")': /vendor/logout"
        }
      ]
    }
  }
}